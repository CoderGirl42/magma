{\rtf1\ansi \deff0\deflang1033{\fonttbl{\f0\froman\fcharset0\fprq2 Tms Rmn{\*\falt Times New Roman};}{\f1\froman\fcharset2\fprq2 Symbol;}{\f2\fswiss\fcharset0\fprq2 Helv{\*\falt Arial};}{\f3\fmodern\fcharset0\fprq1 Courier;}
{\f4\froman\fcharset0\fprq2 Times New Roman;}{\f5\fswiss\fcharset0\fprq2 Arial;}{\f6\froman\fcharset0\fprq2 MS Serif;}{\f7\fswiss\fcharset0\fprq2 MS Sans Serif;}{\f8\froman\fcharset0\fprq2 Times;}{\f9\fswiss\fcharset0\fprq2 Helvetica;}
{\f10\fswiss\fcharset0\fprq2 System;}{\f11\fmodern\fcharset0\fprq1 Courier New;}{\f12\fmodern\fcharset0\fprq1 Roman 10cpi;}{\f13\fmodern\fcharset0\fprq1 Roman 12cpi;}{\f14\fmodern\fcharset0\fprq1 Roman 17cpi;}{\f15\fmodern\fcharset0\fprq1 Roman 20cpi;}
{\f16\fmodern\fcharset0\fprq1 Roman 5cpi;}{\f17\fmodern\fcharset0\fprq1 Roman 6cpi;}{\f18\froman\fcharset0\fprq2 Roman PS;}{\f19\fmodern\fcharset0\fprq2 Roman PX;}{\f20\froman\fcharset255\fprq2 Roman;}{\f21\fscript\fcharset255\fprq2 Script;}
{\f22\fmodern\fcharset255\fprq2 Modern;}{\f23\fmodern\fcharset0\fprq1 Lucida Console;}{\f24\fnil\fcharset2\fprq2 Wingdings;}{\f25\fswiss\fcharset0\fprq1 MS Dialog;}{\f26\fmodern\fcharset2\fprq1 MS LineDraw;}{\f27\fdecor\fcharset0\fprq2 Algerian;}
{\f28\fswiss\fcharset0\fprq2 Arial Rounded MT Bold;}{\f29\froman\fcharset0\fprq2 Bookman Old Style;}{\f30\fdecor\fcharset0\fprq2 Braggadocio;}{\f31\fswiss\fcharset0\fprq2 Britannic Bold;}{\f32\fscript\fcharset0\fprq2 Brush Script MT;}
{\f33\fswiss\fcharset0\fprq2 Century Gothic;}{\f34\fdecor\fcharset0\fprq2 Colonna MT;}{\f35\fdecor\fcharset0\fprq2 Desdemona;}{\f36\froman\fcharset0\fprq2 Footlight MT Light;}{\f37\fswiss\fcharset0\fprq2 Impact;}{\f38\fdecor\fcharset0\fprq2 Kino MT;}
{\f39\froman\fcharset0\fprq2 Wide Latin;}{\f40\fscript\fcharset0\fprq2 Matura MT Script Capitals;}{\f41\fdecor\fcharset0\fprq2 Playbill;}{\f42\fscript\fcharset0\fprq2 Mistral;}{\f43\fscript\fcharset0\fprq2 Vivaldi;}{\f44\fscript\fcharset0\fprq2 Gradl;}
{\f45\fdecor\fcharset0\fprq2 Stencil;}{\f46\fdecor\fcharset0\fprq2 Bauhaus 93;}{\f47\fswiss\fcharset0\fprq2 Albertus (W1);}{\f48\fswiss\fcharset0\fprq2 Albertus Xb (W1);}{\f49\fswiss\fcharset0\fprq2 Antique Olv (W1);}
{\f50\froman\fcharset0\fprq2 CG Times (W1);}{\f51\fscript\fcharset0\fprq2 Coronet (W1);}{\f52\fmodern\fcharset0\fprq1 Courier (W1);}{\f53\fmodern\fcharset0\fprq1 Letter Gothic (W1);}{\f54\fswiss\fcharset0\fprq2 Univers (W1){\*\falt Arial};}
{\f55\fswiss\fcharset0\fprq2 Univers Cd (W1);}{\f56\fmodern\fcharset0\fprq1 LinePrinter;}{\f57\froman\fcharset0\fprq2 CG Times;}{\f58\fswiss\fcharset0\fprq2 Univers;}{\f59\fswiss\fcharset0\fprq2 Univers Condensed;}
{\f60\fswiss\fcharset0\fprq2 Antique Olive;}{\f61\froman\fcharset0\fprq2 Garamond;}{\f62\fswiss\fcharset0\fprq2 CG Omega;}{\f63\fswiss\fcharset0\fprq2 Albertus Medium;}{\f64\fswiss\fcharset0\fprq2 Albertus Extra Bold;}
{\f65\froman\fcharset0\fprq2 Clarendon Condensed;}{\f66\fscript\fcharset0\fprq2 Coronet;}{\f67\fmodern\fcharset0\fprq1 Letter Gothic;}{\f68\fscript\fcharset0\fprq2 Marigold;}{\f69\froman\fcharset2\fprq2 MT Extra;}{\f70\fmodern\fcharset0\fprq0 pica;}
{\f71\fmodern\fcharset0\fprq0 Elite;}{\f72\fmodern\fcharset0\fprq0 prestige;}{\f73\fmodern\fcharset0\fprq0 lettergothic;}{\f74\fmodern\fcharset0\fprq0 gothicPS;}{\f75\fmodern\fcharset0\fprq0 cubicPS;}{\f76\fmodern\fcharset0\fprq0 avantegarde;}
{\f77\fmodern\fcharset0\fprq0 spartan;}{\f78\fmodern\fcharset0\fprq0 metro;}{\f79\fmodern\fcharset0\fprq0 presentation;}{\f80\fmodern\fcharset0\fprq0 APL;}{\f81\fmodern\fcharset0\fprq0 OCRA;}{\f82\fmodern\fcharset0\fprq0 OCRB;}
{\f83\froman\fcharset0\fprq0 boldPS;}{\f84\froman\fcharset0\fprq0 emperorPS;}{\f85\froman\fcharset0\fprq0 madaleine;}{\f86\froman\fcharset0\fprq0 zapf humanist;}{\f87\froman\fcharset0\fprq0 classic;}{\f88\froman\fcharset0\fprq0 roman f;}
{\f89\froman\fcharset0\fprq0 roman g;}{\f90\froman\fcharset0\fprq0 roman h;}{\f91\froman\fcharset0\fprq0 timesroman;}{\f92\froman\fcharset0\fprq0 century;}{\f93\froman\fcharset0\fprq0 palantino;}{\f94\froman\fcharset0\fprq0 souvenir;}
{\f95\froman\fcharset0\fprq0 caledonia;}{\f96\froman\fcharset0\fprq0 bodini;}{\f97\froman\fcharset0\fprq0 university;}{\f98\fscript\fcharset0\fprq0 scriptPS;}{\f99\fscript\fcharset0\fprq0 script c;}{\f100\fscript\fcharset0\fprq0 script d;}
{\f101\fscript\fcharset0\fprq0 commercial script;}{\f102\fnil\fcharset0\fprq0 Park Avenue;}{\f103\fscript\fcharset0\fprq0 script h;}{\f104\fscript\fcharset0\fprq0 greek;}{\f105\froman\fcharset0\fprq0 kana;}{\f106\froman\fcharset0\fprq0 hebrew;}
{\f107\froman\fcharset0\fprq0 roman s;}{\f108\froman\fcharset0\fprq0 russian;}{\f109\froman\fcharset0\fprq0 roman u;}{\f110\froman\fcharset0\fprq0 roman v;}{\f111\froman\fcharset0\fprq0 roman w;}{\f112\fdecor\fcharset0\fprq0 narrator;}
{\f113\fdecor\fcharset0\fprq0 emphasis;}{\f114\fdecor\fcharset0\fprq0 zapf chancery;}{\f115\fdecor\fcharset0\fprq0 decor d;}{\f116\fdecor\fcharset0\fprq0 old english;}{\f117\fdecor\fcharset0\fprq0 decor f;}{\f118\fdecor\fcharset0\fprq0 decor g;}
{\f119\fdecor\fcharset0\fprq0 cooper black;}{\f120\fnil\fcharset0\fprq0 linedraw;}{\f121\fnil\fcharset0\fprq0 math7;}{\f122\fnil\fcharset0\fprq0 math8;}{\f123\fnil\fcharset0\fprq0 bar3of9;}{\f124\fnil\fcharset0\fprq0 EAN;}
{\f125\fnil\fcharset0\fprq0 pcline;}{\f126\fnil\fcharset0\fprq0 tech h;}{\f127\fswiss\fcharset0\fprq0 Helvetica-Narrow;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;
\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet{\fs20 \snext0 Normal;}{\s1\sb240 \b\f2\ul \sbasedon0\snext0 heading 1;}{\s2\sb120 \b\f2 \sbasedon0\snext0 heading 2;}{\s3\li360 \b \sbasedon0\snext28 heading 3;}{\s4\li360 \ul \sbasedon0\snext28 heading 4;}{\s5\li720 \b\fs20 
\sbasedon0\snext28 heading 5;}{\s6\li720 \fs20\ul \sbasedon0\snext28 heading 6;}{\s7\li720 \i\fs20 \sbasedon0\snext28 heading 7;}{\s8\li720 \i\fs20 \sbasedon0\snext28 heading 8;}{\s9\li720 \i\fs20 \sbasedon0\snext28 heading 9;}{\*\cs10 \additive 
Default Paragraph Font;}{\s15 \fs20 \sbasedon0\snext15 annotation text;}{\s16\li1560\sl360\slmult1\keep\keepn\tqr\tldot\tx8640 \f4\fs18\lang2057 \sbasedon0\snext0 toc 8;}{\s17\li1300\sl360\slmult1\keep\keepn\tqr\tldot\tx8640 \f4\fs18\lang2057 
\sbasedon0\snext0 toc 7;}{\s18\li1040\sl360\slmult1\keep\keepn\tqr\tldot\tx8640 \f4\fs18\lang2057 \sbasedon0\snext0 toc 6;}{\s19\li780\sl360\slmult1\keep\keepn\tqr\tldot\tx8640 \f4\fs18\lang2057 \sbasedon0\snext0 toc 5;}{
\s20\li520\sl360\slmult1\keep\keepn\tqr\tldot\tx8640 \f4\fs18\lang2057 \sbasedon0\snext0 toc 4;}{\s21\li260\sl360\slmult1\keep\keepn\tqr\tldot\tx8640 \i\f4\fs20\lang2057 \sbasedon0\snext0 toc 3;}{\s22\sl360\slmult1\keep\keepn\tqr\tldot\tx8640 
\scaps\f4\fs20\lang2057 \sbasedon0\snext0 toc 2;}{\s23\sb120\sa120\sl360\slmult1\keep\keepn\tqr\tldot\tx8640 \b\caps\f4\fs20\lang2057 \sbasedon0\snext0 toc 1;}{\s24\tqc\tx4320\tqr\tx8640 \fs20 \sbasedon0\snext24 footer;}{
\s25\qj\sl360\slmult1\keep\keepn\tqc\tx4819\tqr\tx9071 \f4\fs26\lang2057 \sbasedon0\snext25 header;}{\*\cs26 \additive\f0\fs16\up6\lang1033 \sbasedon10 footnote reference;}{\s27 \fs20 \sbasedon0\snext27 footnote text;}{\s28\li720 \fs20 \sbasedon0\snext28 
Normal Indent;}{\s29\fi-240\li480\sb80\tx480 \f9 \sbasedon0\snext29 nscba;}{\s30\fi-240\li240\sa20 \f9 \sbasedon0\snext30 j;}{\s31\li480\sa20 \f9 \sbasedon0\snext31 ij;}{\s32\sb80\sa20 \f9 \sbasedon0\snext32 btb;}{\s33\fi-240\li2400\sb20\sa20 \f9\fs20 
\sbasedon0\snext33 ctcb;}{\s34\fi-240\li480\sa40\tx480 \f9 \sbasedon0\snext34 ns;}{\s35\sa120 \f9\fs28 \sbasedon0\snext35 TT;}{\s36\fi-240\li2400\sa20 \f9 \sbasedon0\snext36 crtj;}{\s37\fi-240\li480\tx480 \f9 \sbasedon0\snext37 nsca;}{\s38\sa20 \f9 
\sbasedon0\snext38 bt;}{\s39\li240\sb120\sa40 \f9 \sbasedon0\snext39 Hf;}{\s40\li240\sb120\sa40 \f9 \sbasedon0\snext40 Hs;}{\s41\li480\sb120\sa40 \f9 \sbasedon0\snext41 RT;}{\s42\fi-2160\li2160\sb240\sa80\tx2160 \f9 \sbasedon0\snext42 c;}{
\s43\li2160\sa20 \f9 \sbasedon0\snext43 ct;}{\s44\li240\sa20 \f9 \sbasedon0\snext44 it;}{\s45\li480 \f9\fs20 \sbasedon0\snext45 nsct;}{\s46\fi-160\li400\sb80\sa40 \f9 \sbasedon0\snext46 nscb;}{\s47\fi-2640\li2880\sb120\sa40\brdrb\brdrs\brdrw15 \brdrbtw
\brdrs\brdrw15 \tx2880 \f9 \sbasedon0\snext47 HC2;}{\s48\fi-2640\li2880\sb120\sa20\tx2880 \f9 \sbasedon0\snext48 C2;}{\s49\fi-240\li2400\sa20 \f9\fs20 \sbasedon0\snext49 ctc;}{\s50\li2160\sb160 \f9 \sbasedon0\snext50 crt;}{\s51\li480\sb20\sa40 \f9 
\sbasedon0\snext51 or;}{\s52\fi-216\li360\ri144\sb140 \b\f54\fs20 \sbasedon0\snext0 H2;}{\s53\fi-216\li360\ri144\sb40\sa60\tx360 \f11\fs20 \sbasedon0\snext53 Code;}{\s54\li360\ri144\sb40\sa60 \f54\fs20 \sbasedon0\snext54 In1;}{\s55\li360\ri144\sb140 
\b\f54\fs20 \sbasedon0\snext54 H3;}{\s56\fi-187\li360\ri144\sa60\tx360 \f54\fs20 \sbasedon0\snext56 LS1;}{\s57\fi-180\li540\ri144\sa60\tx540 \f54\fs20 \sbasedon56\snext57 LS2;}{\s58\fi-2563\li2707\ri144\sb40\sa60\tx2700 \f54\fs20 \sbasedon0\snext58 T2;}{
\s59\li43\ri144\sb40\sl-43\slmult1\keep\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \f54\fs20 \sbasedon0\snext60 TLine;}{\s60\fi-4003\li4147\ri144\sb40\sa60\tx2340\tx4140 \f54\fs20 \sbasedon0\snext60 T3;}{
\s61\fi-4363\li4507\ri144\sb40\sa60\tx1620\tx3060\tx4500 \f54\fs20 \sbasedon0\snext61 T4;}{\s62\fi-216\li360\ri144\sb40\sa104 \b\f54\cf2 \sbasedon0\snext0 H1;}{\s63\fi-216\li360\ri144\sa60\tx360 \f54\fs20 \sbasedon56\snext63 NUM1;}{
\s64\fi-216\li576\ri144\sa60\tx576 \f54\fs20 \sbasedon63\snext64 NUM2;}{\s65\li144\sa60\keep\tx360\tx547\tx720\tx907\tx1080\tx1267 \f11\fs20 \sbasedon53\snext65 CodeNW;}{\s66\li360\sa60\keep\tx540\tx720\tx907\tx1080\tx1267\tx1440 \f11\fs20 
\sbasedon65\snext66 CodeNWIn;}{\s67\li144\sb40\sa60\keep\tx360\tx547\tx720\tx907\tx1080\tx1267 \f54\fs20 \sbasedon0\snext52 Syntax;}{\s68\fi-216\li360\ri144\sb120\tx2347\tx4147 \b\f54\fs20 \sbasedon52\snext59 THead;}{
\s69\fi-576\li720\ri144\sb40\sa60\tx720\tx8820 \f54\fs20 \sbasedon0\snext0 Note;}{\s70\sb40\sa60 \f54\fs20 \sbasedon0\snext70 TCell;}{\s71\fi-284\li426\sa164\sl360\slmult1\keep\keepn \f4\fs22\lang2057 \sbasedon0\snext71 liste;}{
\s72\fi-284\li426\sb192\sa164\sl360\slmult1\keep\keepn \f4\fs22\lang2057 \sbasedon71\snext71 listestart;}{\s73 \f3\fs20 \snext73 Programtekst;}{\s74\qc\sb68 \f3\fs20 \sbasedon73\snext74 TableText;}{\s75\sl360\slmult1\keep\keepn \b\f4\fs22\lang2057 
\sbasedon0\snext75 Statement;}{\s76\qj\keep\keepn \f4\fs22\lang2057 \sbasedon0\snext76 Figur tekst;}{\s77\qj\sb120\keep\keepn \f4\fs20\lang2057 \sbasedon0\snext77 caption;}{\s78\li1820\sl360\slmult1\keep\keepn\tqr\tldot\tx8640 \f4\fs18\lang2057 
\sbasedon0\snext0 toc 9;}{\*\cs79 \additive\super \sbasedon10 endnote reference;}}{\info{\title help.exe Project: help.exe Help}{\subject help.exe Help Index}{\author Ed Snible}{\doccomm help.exe Main help index.}{\creatim\yr1991\mo9\dy21}
{\revtim\yr1993\mo11\dy8\hr13\min2}{\version1}{\edmins31}{\nofpages0}{\nofwords0}{\nofchars0}{\vern49213}}\ftnbj\aenddoc\makebackup\hyphcaps0 \fet0\sectd \linex0\endnhere {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2
\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}\pard\plain \fs20 {\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} main_index}${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Help Index}+{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} index:0005}}{
\fs16\up6  }{\f2 \{bmc editor.bmp\} }{\b\f54\fs28 Contents}{\v\f54 index_info}{\b\f54\fs28\ul 
\par }{\f2 
\par }{\b\f2\uldb What\rquote s new}{\v\f2 mzf_new}{\f2 
\par 
\par }{\b\f2 Commands}{\f2 
\par }{\f2\uldb File Menu}{\v\f2 menu_file}{\f2 
\par }{\f2\uldb Edit Menu}{\v\f2 menu_edit}{\f2 
\par }{\f2\uldb Search Menu}{\v\f2 menu_search}{\f2 
\par }{\f2\uldb Windows Menu}{\v\f2 menu_windows}{\f2 
\par }{\f2\uldb Help Menu}{\v\f2 menu_help}{\f2 
\par }{\b\f2 
\par Toolbar}{\f2 
\par }{\f2\uldb Toolbar Commands}{\v\f2 toolbar}{\f2 
\par }{\b\f2 
\par Procedures
\par }{\f2\uldb What is MZF/FAQs about MZF/MZF copyright}{\v\f2 mzf_hints}{\f2 
\par }{\f2\uldb Zone Basics}{\v\f2 proc_hints}{\f2 
\par }{\f2\uldb Booting and testing areas with a test server}{\v\f2 proc_boot}{\f2 
\par }{\f2\uldb Making Rooms}{\v\f2 IDD_ROOM}{\f2 
\par }{\f2\uldb Making Mobiles}{\v\f2 IDD_MOBDIA}{\f2 
\par }{\f2\uldb Making Objects}{\v\f2 IDD_OBJDIA}{\f2 
\par }{\f2\uldb Shops}{\v\f2 IDD_SHOP}{\uldb 
\par MOBprograms and syntax}{\v IDD_MOBPROG}{\f2 
\par }{\f2\uldb Printing}{\v\f2 print}{\f2 
\par }{\b\f2 
\par Keyboard Topics}{\f2 
\par }{\f2\uldb Windows Key Strokes}{\v\f2 keyboard_topic}{\f2 
\par }{\b\f2 
\par Credits}{\f2 
\par }{\f2\uldb Diku}{\v\f2 CM_HELPCREDITS}{\f2 
\par }{\f2\uldb Merc}{\v\f2 CM_HELPMERC}{\f2 
\par }{\f2\uldb Envy}{\v\f2 CM_HELPENVY}{\f2 
\par }{\f2\uldb ROM}{\v\f2 CM_HELPROM}{\f2 
\par }{\f2\uldb MZF:  MAKE.ZONES.FAST}{\v\f2 mzf_topic}{\f2 
\par }{\fs16\up6 \page }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} index_info}}{\b\f2  }{\f2 For information on how to use Help, press F1 or select Using Help from the Help menu.
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \fs20 {\cs26\fs16\up6 #} menu_edit}${\footnote \pard\plain \fs20 {\cs26\fs16\up6 $} Edit Menu}+{\footnote \pard\plain \fs20 {\cs26\fs16\up6 +} commands:010}}{\b\f2 Edit Menu}{\f2 
\par 
\par }{\f54 The Edit menu provides commands to undo edits, access the clipboard, and to delete text.
\par }{\f2 
\par }\pard \fi-720\li720 {\strike\f2 Cut}{\v\f2 CM_EDITCUT}{\f2 \tab \tab Delete selected object/mobile/room and move it to the clipboard.
\par }{\strike\f2 Copy}{\v\f2 CM_EDITCOPY}{\f2 \tab \tab Copy selected object/mobile/room to the clipboard.
\par }{\strike\f2 Edit Item}{\v\f2 CM_EDITITEM}{\f2 \tab Bring up a dialog to edit the current object/mobile/room.
\par Add\tab \tab Bring up a dialog to edit the current object/mobile/room.
\par Delete\tab \tab Delete selected object/mobile/room.
\par 
\par }\pard {\f2 \page }{\cs26\fs16\up6 #{\footnote \pard\plain \fs20 {\cs26\fs16\up6 #} menu_file}${\footnote \pard\plain \fs20 {\cs26\fs16\up6 $} File Menu}+{\footnote \pard\plain \fs20 {\cs26\fs16\up6 +} commands:020}}{\b\f2 File Menu}{\f2 
\par 
\par }{\f54 The File menu provides commands for creating new files, opening existing files, saving files, printing files, and exiting the application.
\par }{\f2 
\par }{\strike\f2 New}{\v\f2 CM_MDIFILENEW}{\f2 \tab \tab Create a new, untitled, document.
\par }{\strike\f2 Open}{\v\f2 CM_MDIFILEOPEN}{\f2 \tab \tab Open an existing file.
\par }{\strike\f2 Close}{\v\f2 CM_FILECLOSE}{\f2 \tab \tab Close the current document.
\par }{\strike\f2 Save}{\v\f2 CM_FILESAVE}{\f2 \tab \tab Save the current document if its contents have changed.
\par }{\strike\f2 Save As}{\v\f2 CM_FILESAVEAS}{\f2 \tab Save the current document under a new name.
\par }{\strike\f2 File Format}{\v\f2 IDD_FTYPEDIALOG}{\f2 \tab Switch between Merc and EnvyMud modes.
\par }{\strike\f2 Print}{\v\f2 CM_FILEPRINT}{\f2 \tab \tab Print the current document.
\par }{\strike\f2 Print Preview}{\v\f2 CM_FILEPRINTPREVIEW}{\f2 \tab View a sample printout of the current document.
\par }{\strike\f2 Print Setup}{\v\f2 CM_FILEPRINTERSETUP}{\f2 \tab Set printer characteristics.
\par }{\strike\f2 Exit}{\v\f2 CM_EXIT}{\f2 \tab \tab Exit MAKE.ZONES.FAST.
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \fs20 {\cs26\fs16\up6 #} menu_search}${\footnote \pard\plain \fs20 {\cs26\fs16\up6 $} Search Menu}+{\footnote \pard\plain \fs20 {\cs26\fs16\up6 +} commands:030}}{\b\f2 Search Menu}{\f2 
\par 
\par The Search menu provides commands to find text in a zone's short description fields.
\par 
\par }{\strike\f2 Find}{\v\f2 CM_EDITFIND}{\f2 \tab \tab Find a pattern of text in a list view.
\par }{\strike\f2 Next}{\v\f2 CM_EDITFINDNEXT}{\f2 \tab \tab Find the next occurrence of the pattern.
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \fs20 {\cs26\fs16\up6 #} menu_windows}${\footnote \pard\plain \fs20 {\cs26\fs16\up6 $} Windows Menu}+{\footnote \pard\plain \fs20 {\cs26\fs16\up6 +} commands:040}}{\b\f2 Window Menu}{\f2 
\par 
\par The Window menu provides commands to control the position and layout of application's windows.
\par 
\par }{\strike\f2 Cascade}{\v\f2 CM_CASCADECHILDREN}{\f2 \tab Resize and position all windows in an overlapping pattern.
\par }{\strike\f2 Tile}{\v\f2 CM_TILECHILDREN}{\f2 \tab \tab Resize and position all windows in an non overlapping pattern.
\par }{\strike\f2 Arrange Icons}{\v\f2 CM_ARRANGEICONS}{\f2 \tab Align all iconized windows along a grid.
\par }{\strike\f2 Close All}{\v\f2 CM_CLOSECHILDREN}{\f2 \tab Close all windows.
\par }{\strike\f2 Add View}{\v\f2 CM_VIEWCREATE}{\f2 \tab Display a different part of the zone.
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \fs20 {\cs26\fs16\up6 #} menu_help}${\footnote \pard\plain \fs20 {\cs26\fs16\up6 $} Help Menu}+{\footnote \pard\plain \fs20 {\cs26\fs16\up6 +} commands:040}}{\b\f2 Help Menu}{\f2 
\par 
\par The Help menu provides access to the help system and the about dialog.
\par 
\par }{\strike\f2 Contents}{\v\f2 CM_HELPCONTENTS}{\f2 \tab Help topic contents.
\par Using help\tab How to use the Windows help engine.
\par }{\strike\f2 Credits}{\v\f2 CM_HELPCREDITS}{\f2 \tab \tab Display the authors of DikuMud.
\par }{\strike\f2 Merc}{\v\f2 CM_HELPMERC}{\f2 \tab \tab Information about Merc.
\par }{\strike\f2 Envy}{\v\f2 CM_HELPENVY}{\f2 \tab \tab Information about EnvyMud.
\par About\tab \tab Display a small dialog with the name of the program.
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \fs20 {\cs26\fs16\up6 #} proc_copying_text}${\footnote \pard\plain \fs20 {\cs26\fs16\up6 $} Copying Text}+{\footnote \pard\plain \fs20 {\cs26\fs16\up6 +} procedures:010}K{\footnote \pard\plain \fs20 {
\cs26\fs16\up6 K} copy;clipboard}}{\b\f2 Copying Text}{\f2 
\par 
\par To copy a room/object/mobile from a document from the clipboard (as text), choose Edit|}{\f54\uldb Copy}{\v\f54 CM_EDITCOPY}{\f2  from the menu.
\par 
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \fs20 {\cs26\fs16\up6 #} proc_deleting_text}${\footnote \pard\plain \fs20 {\cs26\fs16\up6 $} Deleting Text}+{\footnote \pard\plain \fs20 {\cs26\fs16\up6 +} procedures:020}K{\footnote \pard\plain \fs20 {
\cs26\fs16\up6 K} delete;clipboard}}{\b\f2 Deleting Text}{\f2 
\par 
\par To delete a room/object/mobile from a document, select the text, and choose Edit|}{\f54\uldb Cut}{\v\f54 CM_EDITCUT}{\f2  or Edit|}{\f54\uldb Delete}{\v\f54 CM_EDITDELETE}{\f2 
 from the menu.  Cut will put the deleted item in the clipboard, and Delete will simply delete it.
\par 
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \fs20 {\cs26\fs16\up6 #} proc_exiting}${\footnote \pard\plain \fs20 {\cs26\fs16\up6 $} Exiting}}{\b\f2 Exiting}{\f2 
\par 
\par To exit the application, choose File|}{\f54\uldb Exit}{\v\f54 CM_EXIT}{\f2  from the menu.
\par 
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} print}${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Printing}}{\f2  }{\b\f2 Printing}{\f2 
\par 
\par There are three commands on the File menu which support printing of documents from the application.  File|}{\f54\uldb Print Setup}{\v\f54 CM_FILEPRINTERSETUP}{\f2  is used to select and configure a printer device.  File|}{\f54\uldb Print Preview}{\v\f54 
CM_FILEPRINTPREVIEW}{\f2  displays a special preview window which shows how the document will appear when printed.  File|}{\f54\uldb Print}{\v\f54 CM_FILEPRINT}{\f2  causes the current document to be printed.
\par 
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \fs20 {\cs26\fs16\up6 #} CM_EDITCOPY}${\footnote \pard\plain \fs20 {\cs26\fs16\up6 $} Edit Copy Command}+{\footnote \pard\plain \fs20 {\cs26\fs16\up6 +} menu_edit:020}}{\b\f2 Edit Copy Command}{\f2 
\par 
\par }{\f54 The Edit|Copy command places an exact copy of the room/object/mobile text in the clipboard.
\par Currently, this isn\rquote t very useful for MZF, as MZF can\rquote t later paste the clipboard text back into MZF.  However, it is useful for working with text editors and for testing MZF.
\par }{\f2 \page }{\cs26\fs16\up6 #{\footnote \pard\plain \fs20 {\cs26\fs16\up6 #} CM_EDITCUT}${\footnote \pard\plain \fs20 {\cs26\fs16\up6 $} Edit Cut Command}+{\footnote \pard\plain \fs20 {\cs26\fs16\up6 +} menu_edit:030}}{\b\f2 Edit Cut Command}{\f2 
\par 
\par }{\f54 The Edit|Cut command removes the selected room/object/mobile from your document and places the text in the clipboard.}{\f2 
\par }{\f54 Currently, this isn\rquote t very useful for MZF, as MZF can\rquote t later paste the clipboard text back into MZF.  However, it is useful for working with text editors and for testing MZF.
\par }{\f2 \page }{\cs26\fs16\up6 #{\footnote \pard\plain \fs20 {\cs26\fs16\up6 #} CM_EDITDELETE}${\footnote \pard\plain \fs20 {\cs26\fs16\up6 $} Edit Delete Command }+{\footnote \pard\plain \fs20 {\cs26\fs16\up6 +} menu_edit:070}}{\b\f2 Edit Delete Command}{
\f2 
\par 
\par }{\f54 The Edit|Delete command deletes the currently selected room/object/mobile from the current document.  The text is not placed in the clipboard.}{\f2 
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \fs20 {\cs26\fs16\up6 #} CM_FILECLOSE}${\footnote \pard\plain \fs20 {\cs26\fs16\up6 $} File Close Command}+{\footnote \pard\plain \fs20 {\cs26\fs16\up6 +} menu_file:010}}{\b\f2 File Close Command}{\f2 
\par 
\par File|Close closes the currently active window.
\par 
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \fs20 {\cs26\fs16\up6 #} CM_EXIT}${\footnote \pard\plain \fs20 {\cs26\fs16\up6 $} File Exit Command}+{\footnote \pard\plain \fs20 {\cs26\fs16\up6 +} menu_file:020}}{\b\f2 File Exit Command}{\f2 
\par 
\par }{\f54 The File|Exit command exits pounds.  If you've modified documents without saving, you'll be prompted to save before exiting.
\par }{\f2 
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \fs20 {\cs26\fs16\up6 #} CM_MDIFILENEW}${\footnote \pard\plain \fs20 {\cs26\fs16\up6 $} File New Command}+{\footnote \pard\plain \fs20 {\cs26\fs16\up6 +} menu_file:030}}{\b\f2 File New Command}{\f2 
\par 
\par }{\f54 The File|New command opens a new, untitled document, and makes it the active window. The application prompts you to name untitled documents when they are closed.
\par }{\f2 
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \fs20 {\cs26\fs16\up6 #} CM_MDIFILEOPEN}${\footnote \pard\plain \fs20 {\cs26\fs16\up6 $} File Open Command}+{\footnote \pard\plain \fs20 {\cs26\fs16\up6 +} menu_file:040}}{\b\f2 File Open Command}{\f2 
\par 
\par }{\f54 The File|Open command displays the}{\b\f54  }{\f54 Open a File dialog box so you can select a file to load into a new document window.  You can also create a new document by naming a file that doesn't currently exist.
\par 
\par }{\f2 \page }{\cs26\fs16\up6 #{\footnote \pard\plain \fs20 {\cs26\fs16\up6 #} CM_FILEPRINT}${\footnote \pard\plain \fs20 {\cs26\fs16\up6 $} File Print Command}+{\footnote \pard\plain \fs20 {\cs26\fs16\up6 +} menu_file:050}}{\b\f2 File Print Command
\par }{\f2 
\par }{\f54 The File|Print command prints the contents of the active window.  Use File|}{\f54\uldb Print Preview}{\v\f54 CM_FILEPRINTPREVIEW}{\f54  to see how the document will be laid out on printer pages.  Use File|}{\f54\uldb Print Setup}{\v\f54 
CM_FILEPRINTERSETUP}{\f54  to select a printer, and to set printer options.
\par }{\f2 
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \fs20 {\cs26\fs16\up6 #} CM_FILEPRINTPREVIEW}${\footnote \pard\plain \fs20 {\cs26\fs16\up6 $} File Print Preview Command}+{\footnote \pard\plain \fs20 {\cs26\fs16\up6 +} menu_file:060}}{\b\f2 
File Print Preview Command
\par }{\f2 
\par File|Print Preview opens a special window that shows how the active document will appear when printed.  The preview window shows one or two pages of the active document as they would be laid out on printer pages.  Controls on the window allow you to page 
through the pages of the document.\line 
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \fs20 {\cs26\fs16\up6 #} CM_FILEPRINTERSETUP}${\footnote \pard\plain \fs20 {\cs26\fs16\up6 $} File Print Setup Command}+{\footnote \pard\plain \fs20 {\cs26\fs16\up6 +} menu_file:070}}{\b\f2 
File Print Setup Command
\par }{\f2 
\par }{\f54 The File|Printer Setup command displays the Printer Setup dialog box which allows you to select and configure the printer to be used to print documents in the application.
\par 
\par }{\f2 \page }{\cs26\fs16\up6 #{\footnote \pard\plain \fs20 {\cs26\fs16\up6 #} CM_FILESAVE}${\footnote \pard\plain \fs20 {\cs26\fs16\up6 $} File Save Command}+{\footnote \pard\plain \fs20 {\cs26\fs16\up6 +} menu_file:080}}{\b\f2 File Save Command}{\f2 

\par 
\par }{\f54 The File|Save command saves the document in the active window to disk. If the document is unnamed, the Save File As dialog box is displayed so you can name the file, and choose where it is to be saved.
\par }{\f2 
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \fs20 {\cs26\fs16\up6 #} CM_FILESAVEAS}${\footnote \pard\plain \fs20 {\cs26\fs16\up6 $} File Save As Command}+{\footnote \pard\plain \fs20 {\cs26\fs16\up6 +} menu_file:090}}{\b\f2 File Save As Command}{\f2 

\par 
\par }{\f54 The 
File|Save As command allows you to save a document under an new name, or in a new location on disk.  The command displays the Save File As dialog box.  You can enter the new file name, including the drive and directory.  All windows containing this file a
re updated with the new name.  If you choose an existing file name, you are asked if you want to overwrite the existing file. 
\par 
\par }{\f2 \page }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} CM_EDITFIND}${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Search Find Command}+{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} menu_search:010}}{\b\f2 
Search Find Command}{\f2 
\par 
\par The Search|Find command searches the current docum
ent for a text pattern.  The command displays the Find dialog which controls the search process.  Options in the dialog determine whether only whole words are to be matched, whether the case of characters is significant, and whether the search should be c
onducted forwards or backwards through the document.  As each match is found, it is highlighted in the document.
\par 
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} CM_EDITFINDNEXT}${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Search Next Command}+{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} menu_search:020}}{\b\f2 
Search Next Command}{\f2 
\par 
\par The Search|Next command repeats the last Find or Replace operation.
\par 
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} CM_ARRANGEICONS}${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Windows Arrange Icons Command}+{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} menu_window:010}}{\b\f2 
Window Arrange Icons Command}{\f2 
\par 
\par The Window|Arrange Icons command arranges all iconized windows into rows along the bottom of the application's main window.
\par 
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} CM_CASCADECHILDREN}${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Windows Cascade Command}+{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} menu_window:020}}{\b\f2 
Window Cascade Command}{\f2 
\par 
\par The Window|Cascade command arranges all document windows from the top-left position of the application's main window so that the title bar of each is visible.
\par 
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} CM_CLOSECHILDREN}${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Windows Close All Command}+{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} menu_window:030}}{\b\f2 
Window Close All Command}{\f2 
\par 
\par The Window|Close All command closes all document windows open in the application.
\par 
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} CM_TILECHILDREN}${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Windows Tile Command}+{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} menu_window:040}}{\b\f2 
Window Tile Command}{\f2 
\par 
\par The Window|Tile command arranges all document windows side-by-side in a non-overlapping pattern.
\par 
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} CM_HELPCONTENTS}${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Help table of contents}+{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} menu_help:010}}{\b\f2 
Window Help table of contents}{\f2 
\par 
\par The Help|Contents displays the help contents page.
\par 
\par }\pard \keepn {\f2 \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} hints:015}}{\f2  }{\cs26\fs16\up6 K{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 K} Rooms}}{\f2  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {
\cs26\fs16\up6 #} IDD_ROOM}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Making Rooms}}{\f2  \{bmc map.bmp\}}{\b\f2\fs28 Making Rooms}{\f2 
\par }\pard {\f2 
\par The ROOMS list contains all the information necessary for the mud to make all the rooms of your area, link the exits together, and all the other little things concerned with the 'where's' of an area.
\par 
\par To enter your zone into MZF, go into the ROOMS list and select Edit|Add to create the first room.  When you are finished, click }{\b\f2 create mode}{\f2 , the direction you want an exit for the second room, and click }{\b\f2 MAKE}{\f2 
.  You will then get a dialog for the second room.  }{\b\f2 MAKE}{\f2  always makes a room, if you want to set an exit between two existing rooms select }{\b\f2 SET}{\f2 .
\par 
\par Room properies are as follows:
\par }{\b\f2\fs24 
\par Short }{\b\f2\fs24\ul D}{\b\f2\fs24 escription:}{\f2 
 The short desc is placed at the top of the room description, and can often be seen even if the player is in 'brief' mode.  Simply put, this is the title of the room.  Short Desc's should be kept to one line minimum...the shorter the better, in fact
 -- it should just be the shortest possible description of this room: 'A Dark Tunnel' 'The Bakery' 'Ms. Celande's Office'.
\par 
\par }{\b\f2\fs24\ul L}{\b\f2\fs24 ong Description:}{\f2 
 The long desc is the full description of the room, which a player will typically see when entering or by typing 'look'.  When creating a long desc, please keep in mind to keep each line under 80 characters.
\par 
\par }{\b\f2\fs24 ROOM FLAGS
\par }{\f2 
\par }{\b\f2 DARK}{\f2 \tab \tab \tab A light is needed during the day
\par }{\b\f2 NO}{\f2  }{\b\f2 MOB}{\f2 \tab \tab Mobs cannot walk into the square.  (Good for keeping mobs wandering on one side of a zone, for example only on one side of a river.)
\par }{\b\f2 INDOORS}{\f2 \tab \tab "Call Lightening" spell doesn't work, and players get no weather notification.
\par }{\b\f2 PRIVATE}{\f2 \tab \tab Only two players may be in this room
\par }{\b\f2 SAFE}{\f2 \tab \tab \tab You can't be summoned out of the room
\par }{\b\f2 SOLITARY}{\f2 \tab \tab One player only at a time
\par }{\b\f2 PET SHOP}{\f2 \tab \tab Currently disabled, as it has certain requirements the editor cannot deal with yet.
\par }{\b\f2 NO RECALL}{\f2 \tab \tab Cursed room, God blocks recall
\par }{\b\f2 CONE OF SILENCE}{\f2 \tab No talking or spellcasting in this room. (EnvyMud only.)
\par 
\par }{\b\f2\fs24 RANDOMIZE EXITS
\par }{\f2 Used for places the zone is supposed to 
be unmappable.  4 here creates a 2 dimensional maze (the Great Eastern Desert), 6 creates a 3 dimensional maze (the Void).  Other numbers are not recommended.  It is not recommended the room have any doors if you use this.
\par 
\par }{\b\f2\fs24 SECTOR TYPES}{\f2 
\par 
\par The 'sector type' of a room controls how many movement points it costs to enter that room.
\par 
\par }\trowd \trgaph108\trleft1047 \clcbpat16\clshdng2500 \cellx4632\clcbpat16\clshdng2500 \cellx5502 \pard \intbl\box\brdrs\brdrw15\brsp20 {\b\f2\fs24\ul\cf1 Type\cell Cost\cell }\pard \intbl {\f2 \row }\trowd \trgaph108\trleft1047 \cellx4632\cellx5502 \pard 
\intbl\box\brdrs\brdrw15\brsp20 {\b\f2\cf1 Inside\cell }{\f2\cf1 1\cell }\pard \intbl {\f2 \row }\pard \intbl\box\brdrs\brdrw15\brsp20 {\b\f2\cf1 City Streets\cell }{\f2\cf1 2\cell }\pard \intbl {\f2 \row }\pard \intbl\box\brdrs\brdrw15\brsp20 {\b\f2\cf1 
Field\cell }{\f2\cf1 2\cell }\pard \intbl {\f2 \row }\pard \intbl\box\brdrs\brdrw15\brsp20 {\b\f2\cf1 Forest\cell }{\f2\cf1 3\cell }\pard \intbl {\f2 \row }\pard \intbl\box\brdrs\brdrw15\brsp20 {\b\f2\cf1 Hills\cell }{\f2\cf1 4\cell }\pard \intbl {\f2 
\row }\pard \intbl\box\brdrs\brdrw15\brsp20 {\b\f2\cf1 Mountain\cell }{\f2\cf1 5\cell }\pard \intbl {\f2 \row }\pard \intbl\box\brdrs\brdrw15\brsp20 {\b\f2\cf1 Water, swimmable\cell }{\f2\cf1 4\cell }\pard \intbl {\f2 \row }\pard \intbl\box
\brdrs\brdrw15\brsp20 {\b\f2\cf1 Water, not swimmable }{\f2\cf1 (need a boat-type item to cross.)}{\b\f2\cf1 \cell }{\f2\cf1 1\cell }\pard \intbl {\f2 \row }\pard \intbl\box\brdrs\brdrw15\brsp20 {\b\f2\cf1 Underwater}{\f2\cf1  (Envy only)}{\b\f2\cf1 
\cell }{\f2\cf1 6\cell }\pard \intbl {\f2 \row }\pard \intbl\box\brdrs\brdrw15\brsp20 {\b\f2\cf1 Air }{\f2\cf1 (need to be able to fly to cross)}{\b\f2\cf1 \cell }{\f2\cf1 10\cell }\pard \intbl {\f2 \row }\trowd \trgaph108\trleft1047 \cellx4632\cellx5502 
\pard \intbl\box\brdrs\brdrw15\brsp20 {\b\f2\cf1 Desert\cell }{\f2\cf1 6\cell }\pard \intbl {\f2 \row }\pard {\f2 
\par (Note that mobs are always able to go into }{\b\f2 water, boat}{\f2  and }{\b\f2 air}{\f2 , even if they have no boat and cannot fly.  If you need to keep mobs out of the water or the air, you need to set the }{\b\f2 NO MOB}{\f2  flag.)
\par 
\par The sector type mostly controls how much move points a player uses crossing it.  This is why you get tired in the Great Eastern Desert more quickly than Midgaard.  Sometimes you want to make a sector (e.g. the mines of Moria) which is 'cave' or something,
 not one of the standard sector types.  If that is the case, you just decide how many move points you want to burn and set the room to that.  (Moria is mostly 'field')
\par 
\par }{\b\f2\fs24 CONTENTS
\par }{\f2 The contents are the mobiles and objects that are reset into the room when the zone resets.
\par 
\par }{\b\f2\fs24 EXITS
\par }{\f2 Each room has up to 6 exits.  Each exit has certain attributes, set from the }{\f2\uldb Exits dialog}{\v\f2 IDD_EXIT}{\f2 
\par 
\par (Please note that adding a description for the door itself is usually done under the 'extra descriptions' part of the room.)
\par 
\par }{\b\f2\fs24 Extras
\par }{\f2 An extra description (of which there can be many for each room), is something else specific to look at, not normally seen just by typing look, or entering the room.  Extras are set from the }{\f2\uldb Extras dialog}{\v\f2 IDD_EXTRADIA}{\f2 
\par 
\par }{\b\f2\fs24 TIPS and OBSERVATIONS
\par }{\f2 
\par 
\par *Map it out the rooms on paper first.  Be grandiose.  As you build, it will usually get smaller anyways!
\par 
\par *For a working door, the rooms on each side must have matching doors and doorflags.  It is ok to have special 'one-way' doors, but if you do, you should not have the room at the far end of the 'one-way' have a door on the wall that would normally be the r
eturn door, as Merc gives a warning message.
\par 
\par *Doors are all initially open, you need to set the initial position if you expect them to start closed or locked.
\par 
\par *If you want an air zone that players can walk around in, just call it air and make the sector type something else.  Good for weird astral adventures and such.
\par 
\par *You want to put exit descriptions in places like towns where new players will be.  Exit descriptions are also handy for warnings before no-exit rooms, and to allow players to look in directions they can't go, like off a cliff (If you want a LOOK directio
n without exit, specify }{\i\f2 [none]}{\f2  as the room in that direction)
\par 
\par *A "no exit" room is just a room with entrances but no exits.  You can have fun with these, try to hint at what is going to happe
n in the previous room so that if someone gets stuck there you can ask them why they didn't read the warnings...  You can also have a no exit room connect to itself like an "endless hallway" where both the N and S doors take you back to the same room.

\par 
\par }\pard \keepn {\f2 \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} hints:020}}{\f2  }{\cs26\fs16\up6 K{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 K} Mobiles}}{\f2  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {
\cs26\fs16\up6 #} IDD_MOBDIA}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Mobiles}}{\f2  \{bmc mob.bmp\} }{\b\f2\fs28 Mobiles}{\f2 
\par }\pard {\f2 
\par The Mobile dialog contains everything the mud needs to know about the mobs, except for where they are and what they're holding.
\par 
\par }{\b\f2\fs24 DESCRIPTIONS}{\f2 
\par 
\par There are three discriptions needed for a mobile:
\par }{\b\f2 Namelist:}{\f2 
\par The namelist is the list of words that can be used to specify the mobile as a target.  For example, a "cityguard" would have "guard cityguard" for a namelist, allowing a player to type either "kill guard" or "kill cityguard".  The namelist usually include
s everything a player would logically use for a target.
\par 
\par }{\b\f2 Short description:
\par }{\f2 The short description is what the player sees when the mobile is attacking, for example "the mayor" or "a guard".  This is used by the server to form sentences such as "a guard scratches you."
\par 
\par }{\b\f2 Level}{\f2 
\par This is the level of the mobile.  Different MUDs have different level schemes, but typically range from 0 or 1 (the lowest) to 30-60 (the highest).
\par 
\par }{\b\f2 M/F/N/E
\par }{\f2 This is the sex of the mobile.  Male/Female should be obvious.  N is for Neuter/Sexless.  Use N for creatures which reproduce asexually like green slime.  E (Either) is a random chance for the mobile to pop male or female.
  This is a ROM-only feature usually used for animals.
\par 
\par }{\b\f2 Align}{\f2 
\par This is the mobile\rquote s }{\i\f2 alignment.}{\f2   Evil mobiles (e.g. demons) would be -1000, the most evil alignment.  Good mobiles (e.g. angels) would be 1000.  Neutral mobiles would be 0.
\par Strangely, the alignment of the mobile is not used by the server for anything other than determining the XP value of the mobile.  You get more experience killing mobiles with a greater difference in alignment from you.
\par 
\par }{\b\f2 Long description:}{\f2 
\par The long description is what a player sees when entering a room, such as "The mayor is here.  He shakes your hand." or "A cityguard is here, guarding something."
\par 
\par }{\b\f2 Look:}{\f2 
\par This is what the player sees when the player explicity types }{\b\f2 LOOK <target>}{\f2 .  This can be long or short.
\par 
\par Spoofing the namelist:
\par There is a technique called "Spoofing the namelist" where the namelist doesn't include the name of the mobile.  For example, in the High Tower of Sorcery, there is
 an illusionist.  When you enter, the long description says "A dragon is here".  But if you type "KILL DRAGON", you get no satisfaction...  You have to type "KILL ILLUSIONIST".  This is because the namelist for this mobile is just "illusionist".
\par 
\par }{\b\f2\fs24 ACTION FLAGS
\par }{\f2 
\par }{\b\f2 SENTINEL}{\f2 \tab \tab Stays in one room (Guards, Shopkeepers, etc)
\par }{\b\f2 SCAVENGER}{\f2 \tab \tab Picks up objects
\par }{\b\f2 AGGRESSIVE}{\f2 \tab Attacks PC's
\par }{\b\f2 STAY_AREA}{\f2 \tab \tab Won't leave area (don't want Smurfs in Midgaard...)
\par }{\b\f2 WIMPY}{\f2 \tab \tab Flees when hurt
\par }{\b\f2 TRAIN}{\f2 \tab \tab \tab Can train PC's
\par }{\b\f2 PRACTICE}{\f2 \tab \tab Can practice PC's
\par }{\b\f2 GAMBLE}{\f2 \tab \tab Runs a gambling game (EnvyMud only)
\par }{\b\f2 SUPER-WIMPY\tab }{\f2 Flees when hit.  TFC-only.
\par 
\par *There is only one PRACTICE bit, because all guildmasters are actually the same.  The reason thieves can't go PRAC pick locks at the Clerics guild is because "God" won't let thieves in the door of the Clerics guild.  Making a room a guild room isn't done 
in the area file, it is done in the code and is class specific.
\par 
\par }{\b\f2\fs24 AFFECTION FLAGS
\par }{\f2 
\par Action flags tell the mud how a mob behaves, and affection flags control the 'special qualities of a mob.  These flags are added together in the way detailed in 'FLAGS', in part 3 of this handbook.
\par Below is a listing of flags for each type, with descriptions of what each does:
\par 
\par }{\b\f2 INVISIBLE}{\f2 \tab \tab \tab Mob is invisible
\par }{\b\f2 DETECT_INVIS}{\f2 \tab \tab Mob can detect invisible players.  Good for keeping players from going invis and waltzing through the place when combined with AGGRESSIVE.
\par }{\b\f2 DETECT_HIDDEN}{\f2 \tab \tab (Slash isn't clear if this use used...)
\par }{\b\f2 SANCTUARY}{\f2 \tab \tab \tab Mob has a white aura and takes 1/2 damage
\par }{\b\f2 FAERIE_FIRE}{\f2 \tab \tab Mob has a pink aura and is easy to hit.  (Good for weird special effects, don't overuse please).
\par }{\b\f2 INFRARED}{\f2 \tab \tab \tab Mobs in DARK rooms get this.  Not clear if it is used.
\par }{\b\f2 PROTECT_EVIL}{\f2 \tab \tab Damage from an Evil source is reduced by 25%
\par }{\b\f2 SNEAK}{\f2 \tab \tab \tab Can't see when the mob arrives and leaves
\par }{\b\f2 HIDE}{\f2 \tab \tab \tab \tab Can't see the mob, even with detect invis.
\par }{\b\f2 FLYING}{\f2 \tab \tab \tab Has no meaning, all mobs can fly.  However, Tynian points out that in the future this may not be so, so please use it for the mobs you want to be able to fly.
\par }{\b\f2 PASS_DOOR}{\f2 \tab \tab \tab Mob is translucent and walks trough walls
\par }{\b\f2 PROTECT GOOD}{\f2 \tab \tab Damage from a Good source is reduced (ROM, TFC)
\par }{\b\f2 PLAGUE}{\f2 \tab \tab \tab Mobile has the plague.  ROM only.
\par }{\b\f2 WEAKEN}{\f2 \tab \tab \tab Affected by the }{\b\f2 WEAKEN}{\f2  spell (ROM only)  (I\rquote m not sure this can be used in an area file--Slash)
\par }{\b\f2 DARK VISION}{\f2 \tab \tab Mobile can see in the dark.  (ROM only)  (I\rquote m not sure this is implemented in ROM 2.4--Slash)
\par }{\b\f2 BERSERK\tab \tab \tab }{\f2 Mobile acts as if the BERSERK spell is on him.  (I think that this is not to be used in area files, because mobiles are supposed to use the OFF flag BERSERK on the ROM dialog instead.--Slash)
\par }{\b\f2 SWIM}{\f2 \tab \tab \tab Mobile can swim.  (I\rquote m not sure this is implemented in ROM 2.4--Slash)
\par 
\par Missing:  The following affected-bys are missing from the dialog.  This will be fixed soon.
\par }{\b\f2 WATERWALK}{\f2 \tab \tab (Envy only)
\par }{\b\f2 GILLS}{\f2 \tab \tab \tab \tab (Envy only)
\par }{\b\f2 MUTE}{\f2 \tab \tab \tab \tab (Envy only)
\par 
\par }{\b\f2 Race}{\f2 
\par This is an attribute of Envy 2 and ROM only.  Each has different races.  On Envy 2, the race gives certain racial abilities and also possible hatred of other races.  On ROM, the race gives racial abilities and bits.  On ROM, you can also set the }{
\f2\uldb PARTS}{\v\f2 IDD_ROMMOBPARTS}{\f2  and }{\f2\uldb BITS}{\v\f2 IDD_ROMMOBBITS}{\f2  here.
\par 
\par }{\b\f2 *** HITPOINTS and DAMAGE
\par }{\f2 Merc wants to calculate ALL of these for you.  This means that you can't make high level mages with tiny amounts of hit points.  Sorry.
\par 
\par }{\b\f2\fs24 Spec-Function
\par }{\b\f11 breath_any}{\f11          \\    (Normally used for dragons, but can be used by
\par }{\b\f11 breath_acid}{\f11          \\   any mob with really caustic breath.)
\par }{\b\f11 breath_fire}{\f11           \\  (Some of these will rust/burn the armor right
\par }{\b\f11 breath_frost}{\f11          /   off a player.)
\par }{\b\f11 breath_gas}{\f11           /
\par }{\b\f11 breath_lightning}{\f11    /
\par }{\b\f11 cast_adept}{\f11        (Like mud school and the healer; don't use os Midgaard)
\par }{\b\f11 cast_cleric}{\f11       (e.g. nanny)
\par }{\b\f11 cast_judge}{\f11        (nasty guys in MC1)
\par }{\b\f11 cast_mage}{\f11         (try to kill the wizard shopkeeper in Midgaard...)
\par }{\b\f11 cast_undead}{\f11       (nasty--can summon vampires at high level)
\par }{\b\f11 executioner}{\f11       (Don't use outside Midgaard)
\par }{\b\f11 fido}{\f11              (Eats corpses)
\par }{\b\f11 guard}{\f11             (This makes cityguards try to guard the city...)
\par }{\b\f11 janitor}{\f11           (Picks up trash)
\par }{\b\f11 mayor}{\f11             (CANNOT BE USED OUTSIDE MIDGAARD)
\par }{\b\f11 poison}{\f11            (poisons player, like Moria snakes)
\par }{\b\f11 thief}{\f11             (Any mob that steals...  Smurfs, etc)
\par }{\b\f11 ghost}{\f11 ............(Only comes out at night) (EnvyMud only)
\par }{\b\f11 psionicist}{\f11 .......(Casts 'psionic' type spells) (EnvyMud only)
\par }{\b\f11 repairman}{\f11 ........(Fixes doors) (EnvyMud only)
\par }{\b\f11 nasty}{\f11 ............(More powerful thief) (ROM only)
\par }{\b\f11 troll_member}{\f11 .....(Reserved for HOOD.ARE) (ROM only)
\par }{\b\f11 ogre_member}{\f11 ......(Reserved for HOOD.ARE) (ROM only)
\par }{\b\f11 patrolman}{\f11 ........(Reserved for HOOD.ARE) (ROM only)
\par }{\f2 
\par }{\b\f2\fs24 *** TIPS and OBSERVATIONS
\par }{\f2 
\par *Mobs wander around by default.  Remember to include the 'Sentinel' Action flag for stationary mobs!
\par 
\par *Merc will apply a bit of 'fuzz' to a mobs level, so that the mobs will be a bit different every time.  You can see this reflected in the amount of hit points MZF shows you the mobile can have.
\par 
\par *There is no way to make a mob cast a specific spell.  You have to pick from the list of predefined spec_funs.
\par 
\par }{\f2\uldb Shops}{\v\f2 IDD_SHOP}{\f2 
\par }{\f2\uldb Placing Mobiles in Rooms}{\v\f2 IDD_MOBRESET}{\f2 
\par }{\f2\uldb MobPrograms}{\v\f2 IDD_MOBPROG}{\f2 
\par }{\f2\uldb ROM settings}{\v\f2 IDD_ROMMOBPROP}{\f2 \page 
\par }\pard \keepn {\f2 \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} hints:025}}{\f2  }{\cs26\fs16\up6 K{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 K} Object}}{\f2  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {
\cs26\fs16\up6 #} IDD_OBJDIA}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Objects}}{\f2  \{bmc object.bmp\} }{\b\f2\fs28 Objects
\par }\pard {\f2 
\par An object is any item in the game, be it unmovable rock, the fountain in market square, or that nice sword Everyman the Barbarian has.  Everything the mud needs to know about objects can be found in the OBJECTS dialog, except for where they actually are.

\par 
\par }{\b\f2\fs24 DESCRIPTIONS
\par }{\f2 Same as Rooms and Mobs, except that objects don't get to have long descriptions.  If an object needs a long description, give it an extra description.  Then when the player LOOKs at the object, they will see the extra description.
\par 
\par }{\b\f2\fs24 OBJECT TYPES
\par }{\f2 Hopefully self-explanantory if you are making zones.
\par 
\par }{\b\f2\fs24 OBJECT FLAGS}{\f2 
\par 
\par The following chart gives values and explanations of all the object flags...
\par 
\par }{\b\f2 Glow}{\f2 \tab \tab item glows
\par }{\b\f2 Hum}{\f2 \tab \tab item hums
\par }{\b\f2 Evil}{\f2 \tab \tab item has a red aura to players with det evil/true see
\par }{\b\f2 Invis}{\f2 \tab \tab item is invisible
\par }{\b\f2 Magic}{\f2 \tab \tab item has a magic aura
\par }{\b\f2 Nodrop}{\f2 \tab item cannot be dropped
\par }{\b\f2 Anti-Good}{\f2 \tab not usable by good aligned.
\par }{\b\f2 Anti-Evil}{\f2 \tab not usable by evil aligned.
\par }{\b\f2 Anti-Neut}{\f2 \tab not usable by neutral aligned.
\par }{\b\f2 NoRemove}{\f2 \tab Can't stop using it, like that mithral axe the dwarf has
\par }{\b\f2 No Purge}{\f2 \tab Item isn\rquote t destroyed by \lquote PURGE\rquote  command, and doesn\rquote t take damage from heat/cold/etc.  Stationary objects like furniture should be flagged like this. (ROM.)
\par 
\par }{\b\f2\fs24 WEAR FLAGS
\par }{\f2 REMEMBER TO OR THE TAKE FLAG with the other flag!!!  If you don't, you wind up with something like the greaves in Mahn-Tor, which is armor that when you try to pull it off the corpse it says 'You can't take that.' - Slash
\par 
\par *Try to set only two flags for armor, the "Take" and the other bit.  If you set more, you get problems.  For example, it used to be possible to hold a lot of the rings in t
he game in your hand for an extra benefit, but that isn't the intention and the error messages for items get strange if you are wearing noremove items and it goes for one of the alternate bits.)
\par 
\par *Lights don't need anything other than the "Take" bit, any other bits are ignored by the server (except in the case of the player already using a noremove light...  so don't make a noremove light). (EnvyMud also prohibets 'invisible lights'.  Don't try to
 make those, either.)
\par 
\par }{\b\f2\fs24 OBJECT VALUES}{\f2 
\par 
\par The four numbers consisting of the 'item values' are different for each type of item.  Below the meanings of these numbers are broken down by each type.  Zeroes refer to fields not used, while letters are explained for each section...  NOTE:
\par 
\par LIGHT (1)
\par Value[2]: Number of hours the light can be used for. Zero hours means that
\par           the light has gone out. A negative number will create an eternal
\par           light source.
\par 
\par SCROLL (2)
\par Value[0]: Level of the spell on the scroll.
\par Value[1]: Which spell (unused spells should be set to [none])
\par Value[2]: Which spell
\par Value[3]: Which spell
\par Value[4]: Which spell (ROM only)
\par 
\par WAND (3)
\par Value[0]: Level of spell in wand.
\par Value[1]: Max Charges (1..X)
\par Value[2]: Charges Left
\par Value[3]: Which spell in wand
\par 
\par STAFF (4)
\par Value[0]: Level of spell in staff.
\par Value[1]: Max Charges (1..X)
\par Value[2]: Charges Left
\par Value[3]: Which spell in staff
\par 
\par WEAPON (5)
\par Value[0]: Weapon type.  ROM only.  Standard values are sword/mace/dagger/axe/staff/flail/whip/polearm.  Anything else is consider an \lquote exotic\rquote 
 weapon by the server for the purpose of determining how different types of weapons interact with different armors and natural defenses.
\par Value[1]: Weapon dice.  ROM only.
\par Value[2]: Dice size.  ROM only.
\par Value[3]: The weapon type: slash/pierce/pound etc.
\par Value[4]: Weapon flags.  ROM only.
\par 
\par Remember that clerics can only use 'pound' weapons, and thieves need 'pierce' weapons for backstab...  If you make all the weapons in your zone longswords these classes will get mad.)
\par 
\par TREASURE   (8)
\par [all values are 0]
\par 
\par ARMOR      (9)
\par Value[0]: AC vs Pierce.  ROM only.
\par Value[1]: AC vs Bash.  ROM only.
\par Value[2]: AC vs Slash.  ROM only.
\par Value[3]: AC vs Exotic.  ROM only.
\par Value[4]: Bulk.  ROM only. Bulk is currently not implemented in ROM, but in the future it will be used.  See your ROM builder\rquote s guide.  Example bulks would be clothing at 0, medium shield at 2, and heavy plate armor at 5.
\par 
\par POTION    (10)
\par Value[0]: Level of the spell in the potion.
\par Value[1]: Which spell 
\par Value[2]: Which spell 
\par Value[3]: Which spell
\par Value[4]: Which spell (ROM only)
\par 
\par OTHER     (12) (Sometimes called FURNITURE)
\par Value[0]: Capacity of the furniture, in people.  ROM only.
\par Value[1]: Capacity of the furniture, in weight it can support.  ROM only.
\par Value[2]: Furniture flags. ROM only.
\par Value[3]: Heal bonus.  ROM only.
\par Value[4]: Mana recovery bonus.  ROM only.
\par 
\par TRASH     (13)
\par [all values should be set to 0]
\par 
\par CONTAINER (15)
\par Value[0]: Maximum weight the container can contain.
\par Value[1]: Container flags.  These can be combined, so "closeable and closed and locked" would be 1 + 4 + 8 or 13.
\par 
\par }\trowd \trgaph108\trleft477 \clcbpat16 \cellx1857\clcbpat16 \cellx2937 \pard \intbl\box\brdrs\brdrw15\brsp20 {\b\f2\fs24 Meaning\cell Value\cell }\pard \intbl {\f2 \row }\trowd \trgaph108\trleft477 \cellx1857\cellx2937 \pard \intbl\box
\brdrs\brdrw15\brsp20 {\b\f2 Closeable\cell }{\f2 1\cell }\pard \intbl {\f2 \row }\pard \intbl\box\brdrs\brdrw15\brsp20 {\b\f2 Pickproof\cell }{\f2 2\cell }\pard \intbl {\f2 \row }\pard \intbl\box\brdrs\brdrw15\brsp20 {\b\f2 Closed\cell }{\f2 4\cell 
}\pard \intbl {\f2 \row }\trowd \trgaph108\trleft477 \cellx1857\cellx2937 \pard \intbl\box\brdrs\brdrw15\brsp20 {\b\f2 Locked\cell }{\f2 8\cell }\pard \intbl {\f2 \row }\pard {\f2 
\par Value[2]: The key }{\strike\f2 vnum}{\v\f2 vnum_topic}{\f2  of the container.  No lock = -1.
\par Value[3]: Internal use for Corpses that must "rot".  Don't use.
\par Value[4]: Weight single.  ROM only.  This is the weight of the largest item that fits through the opening.
\par Value[5]: Weight multiplier.  ROM only.  100 for non-magical bags.  Lower numbers indicate bag-of-holding type bags.
\par 
\par DRINK CONTAINER  (17)
\par Value[0]: Maximum drink-units the drink-container can contain.
\par Value[1]: Number of drink-units that are left in the container.
\par Value[2]: The type of liquid in the drink-container, one of:
\par 
\par }\trowd \trgaph108\trleft567 \clcfpat15\clcbpat15\clshdng7500 \cellx2202\clcfpat15\clcbpat15\clshdng7500 \cellx3612\clcfpat15\clcbpat15\clshdng7500 \cellx4719\clcfpat15\clcbpat15\clshdng7500 \cellx5616 \pard \intbl\box\brdrs\brdrw15\brsp20 {\b\fs24\cf8 
Type\cell Drunkness\cell Fullness\cell Thirst\cell }\pard \intbl {\b\cf8 \row }\trowd \trgaph108\trleft567 \clcfpat16\clcbpat8\clshdng2000 \cellx2202\clcfpat16\clcbpat8\clshdng2000 \cellx3612\clcfpat16\clcbpat8\clshdng2000 \cellx4719
\clcfpat16\clcbpat8\clshdng2000 \cellx5616 \pard \intbl\box\brdrs\brdrw15\brsp20 {\b Water\cell }\pard \qr\intbl\box\brdrs\brdrw15\brsp20 0\cell 1\cell 10\cell \pard \intbl \row \pard \intbl\box\brdrs\brdrw15\brsp20 {\b Beer\cell }\pard \qr\intbl\box
\brdrs\brdrw15\brsp20 3\cell 2\cell 5\cell \pard \intbl \row \trowd \trgaph108\trleft567 \cellx2202\cellx3612\cellx4719\cellx5616 \pard \intbl\box\brdrs\brdrw15\brsp20 {\b Wine\cell }\pard \qr\intbl\box\brdrs\brdrw15\brsp20 5\cell 2\cell 5\cell \pard 
\intbl \row \pard \intbl\box\brdrs\brdrw15\brsp20 {\b Ale\cell }\pard \qr\intbl\box\brdrs\brdrw15\brsp20 2\cell 2\cell 5\cell \pard \intbl \row \trowd \trgaph108\trleft567 \clcfpat16\clcbpat8\clshdng2000 \cellx2202\clcfpat16\clcbpat8\clshdng2000 
\cellx3612\clcfpat16\clcbpat8\clshdng2000 \cellx4719\clcfpat16\clcbpat8\clshdng2000 \cellx5616 \pard \intbl\box\brdrs\brdrw15\brsp20 {\b Darkale\cell }\pard \qr\intbl\box\brdrs\brdrw15\brsp20 1\cell 2\cell 5\cell \pard \intbl \row \pard \intbl\box
\brdrs\brdrw15\brsp20 {\b Whisky\cell }\pard \qr\intbl\box\brdrs\brdrw15\brsp20 6\cell 1\cell 4\cell \pard \intbl \row \trowd \trgaph108\trleft567 \cellx2202\cellx3612\cellx4719\cellx5616 \pard \intbl\box\brdrs\brdrw15\brsp20 {\b Lemonade\cell }\pard 
\qr\intbl\box\brdrs\brdrw15\brsp20 0\cell 1\cell 8\cell \pard \intbl \row \pard \intbl\box\brdrs\brdrw15\brsp20 {\b Firebreather\cell }\pard \qr\intbl\box\brdrs\brdrw15\brsp20 10\cell 0\cell 0\cell \pard \intbl \row \trowd \trgaph108\trleft567 
\clcfpat16\clcbpat8\clshdng2000 \cellx2202\clcfpat16\clcbpat8\clshdng2000 \cellx3612\clcfpat16\clcbpat8\clshdng2000 \cellx4719\clcfpat16\clcbpat8\clshdng2000 \cellx5616 \pard \intbl\box\brdrs\brdrw15\brsp20 {\b Local Specialty\cell }\pard \qr\intbl\box
\brdrs\brdrw15\brsp20 3\cell 3\cell 3\cell \pard \intbl \row \pard \intbl\box\brdrs\brdrw15\brsp20 {\b Slime\cell }\pard \qr\intbl\box\brdrs\brdrw15\brsp20 0\cell 4\cell -8\cell \pard \intbl \row \trowd \trgaph108\trleft567 \cellx2202\cellx3612\cellx4719
\cellx5616 \pard \intbl\box\brdrs\brdrw15\brsp20 {\b Milk\cell }\pard \qr\intbl\box\brdrs\brdrw15\brsp20 0\cell 3\cell 6\cell \pard \intbl \row \pard \intbl\box\brdrs\brdrw15\brsp20 {\b Tea\cell }\pard \qr\intbl\box\brdrs\brdrw15\brsp20 0\cell 1\cell 6
\cell \pard \intbl \row \trowd \trgaph108\trleft567 \clcfpat16\clcbpat8\clshdng2000 \cellx2202\clcfpat16\clcbpat8\clshdng2000 \cellx3612\clcfpat16\clcbpat8\clshdng2000 \cellx4719\clcfpat16\clcbpat8\clshdng2000 \cellx5616 \pard \intbl\box
\brdrs\brdrw15\brsp20 {\b Coffee\cell }\pard \qr\intbl\box\brdrs\brdrw15\brsp20 0\cell 1\cell 6\cell \pard \intbl \row \pard \intbl\box\brdrs\brdrw15\brsp20 {\b Blood\cell }\pard \qr\intbl\box\brdrs\brdrw15\brsp20 0\cell 2\cell -1\cell \pard \intbl \row 
\trowd \trgaph108\trleft567 \cellx2202\cellx3612\cellx4719\cellx5616 \pard \intbl\box\brdrs\brdrw15\brsp20 {\b Saltwater\cell }\pard \qr\intbl\box\brdrs\brdrw15\brsp20 0\cell 1\cell -2\cell \pard \intbl \row \trowd \trgaph108\trleft567 \cellx2202
\cellx3612\cellx4719\cellx5616 \pard \intbl\box\brdrs\brdrw15\brsp20 {\b Coke\cell }\pard \qr\intbl\box\brdrs\brdrw15\brsp20 0\cell 1\cell 5\cell \pard \intbl \row \pard {\f2 
\par The above values for drunkness/fullness/thirst are used per four "units" drunk. The values are expressed in HOURS!
\par Example:
\par \tab Dragon empties a bottle (say 7 units) of saltwater.
\par \tab His Drunkness is not changed ((7/4)*0)
\par \tab His Fullness increases by ((7/4)*1) hours
\par \tab His Thirst increases by ((7/4)*-2) hours, thus making him More thirsty.
\par \tab The hours above are numbers between 0 and 24. 24 hours is maximum for drunkness/fullness/thirst.
\par 
\par Value[3]: if this value is non-zero, then the drink is poisoned.
\par 
\par KEY       (18)
\par [all values should be set to 0]
\par 
\par FOOD      (19)
\par Value[0]: The number of hours, that this food will fill the stomach
\par Value[1]: The number of hours before you get hungry again.  ROM only.
\par Value[3]: If this value is non-zero, the food is poisoned.
\par 
\par MONEY     (20)
\par Value[0]: The number of gold coins "in the pile of coins".  (In ROM, silver)
\par Value[1]: The number of gold coins.  ROM only.
\par 
\par ITEM_BOAT      (22)
\par [all values should be set to 0]
\par 
\par ITEM_FOUNTAIN (25)
\par value[2]: Liquid.  ROM only, Merc fountains are always water.
\par 
\par ITEM_PILL (26)
\par value[0]        level
\par value[1]        sn 1
\par value[2]        sn 2
\par value[3]        sn 3
\par value[4]: Spell.  ROM only.
\par 
\par *It is possible for things that don't look like spells at all to be spells, such as the high explosive ammo that comes out of Mega City One lawgivers. (They are wands or staves)
\par 
\par *A funny trick is to make a potion have both a beneficial effect and a negative affect...  Make the players think about what they are doing.  Remember that attack spells cann't be put in potions
, you can't make a 'love potion' with CHARM, instead the player gets the confusing message 'you can't do that.'
\par 
\par *Slash is really tired of potions of different colors.  The random potions are a little better, but what about:
\par 
\par 'a long thin bottle with no label'\tab \tab \tab vs\tab 'an orange potion'
\par 'a jewel encrusted snifter'\tab \tab \tab vs\tab 'a purple potion'
\par 'a clear potion that smells of bitter almonds'\tab vs\tab 'a yellow potion'
\par 'a shrunken head floats in a green fluid'\tab \tab vs\tab 'the bright green potion'
\par '(Throbbing) an old musty bottle'\tab \tab \tab vs\tab 'a jet black potion'
\par 
\par }{\b\f2\fs24 WEIGHT
\par }{\f2 In addition to influencing how much can be carried, weight of weapons keeps weaker characters from wielding the weapons.  Here is a table strength and weilding weights:
\par 
\par Strength            Max Wieldable Weight
\par 
\par 13                       13
\par 14                       14
\par 15                       15
\par 16                       16
\par 17                       22
\par 18                       25
\par 19                       30
\par 20                       35
\par 21                       40
\par 22                       45
\par 23                       50
\par 24                       55
\par 25                       60
\par }{\b\f2\fs24 
\par APPLIES}{\f2 
\par }{\f2\uldb Applies dialog}{\v\f2 IDD_APPLY
\par }{\f2\fs24 Cust}{\f2 
\par }{\f2\uldb Object Customize dialog}{\v\f2 IDD_OBJTYPEDIA}{\f2 
\par 
\par ROM
\par }{\f2\uldb ROM Object Attributes dialog}{\v\f2 IDD_ROMOBJ}{\f2 
\par 
\par }{\b\f2\fs24 TIPS and OBSERVATIONS
\par }{\f2 
\par *A lot of small items make an area more interesting than a few incredibly powerful items, for the most part.  This is very subjective, however.
\par 
\par *Remember to put take wear-flags on almost everything.  It's easier to put a take wear-flag on everything, and take off the ones you don't need (like fountains and such).
\par 
\par *don't feel limited to items players consider 'useful', such as weapons and armor.  A giant (untakeable) monolith, and other strange and odd items can add a lot of atmosphere to an area, as can food and trash.
\par 
\par *The difference between treasure and trash is that treasure is linked to the level of the mob, and trash isn't.  If you don't give treasure any magical bonuses, you can make stuff like 'an eyeball' that is level 22, and players will scramble to ID it only
 to find out it's basically worthless.
\par 
\par *Items that look like other items can be used:  broken boats (trash), pills (food), costume jewelry.  Costume jewelry is hard to make, as the server is going to set a necklace on at 25th level shopkeeper to like AC6 or so, so what you do is give the neckl
ace an AC6 penalty...  (This may change soon-Slash).
\par 
\par *Fountains can be disguised as other stuff like 'waterfall' or 'rusty faucet', but due to a typo in the server other players will see 'Slash drinks from the fountain' instead of 'Slash drinks from the rusty faucet'
\par 
\par *Pills are like potions, with the caveat that you can't eat them when you are full...  This has some interesting possibilities...  For example a cake that lets you pass door into an area, and then when you want to return you cannot until your stomach isn'
t full...  Also note that you can't cast 'identify' on pills and find out what the spells are in Merc, though this is fixed in Envy.
\par 
\par *There is no way to make armor specific to a certain race, so giants can wear halfling vests, and winged aarakocrans can wear vests and still fly.  You can use a few tricks here, eg make an 'open-backed vest' for winged mobs.  There used to be a mob calle
d Aod that had in his long description:
\par <worn on penis> A Trojan (TM) Condom
\par and if you look at an elemental illusionist's long description it will say:
\par <wielded> the Sword of Illusion
\par Neither of these are actually wielded, they are joke items.
\par 
\par *There is no way to have an object give a player a skill, like making a lockpick that boosts lock picking 10% or a helmet of dwarf language speaking.  There is also no way to give specific damage bonuses against certain mobs, such as a sword of dragon sla
ying.
\par 
\par *Invisible objects are pretty cool...  Players can't pick them up without a see invisible, they can walk right past them, esp. if they are put somewhere obscure.  They 
also can't pick up invisible weapons if they are disarmed, etc.  Due to a bug in the server, potions cannot be invisible.
\par 
\par *If you are making armor and want it to have a certain AC value, you are out of luck, as the server will set it to a few levels below the mob, thus a 28th level princess will have a 26th level AC7 frilly petticoat.  The way that you can get around this is
 to make the petticoat a container (like the backpack) or treasure (like a necklace).  Then, you set the object to have an AC applies 
to the AC that you want...  The level will still be high, though.  Also note that COMPare will not work right if you do this.
\par 
\par *What level will your objects have?  If your objects are going on a mob, they will have a level a few levels below the mob if they are 'useful' (weapons, treasure, armor, wands) and level 0 or 1 if they are 'useless' (food, furniture).  If you want to mak
e something high level on the ground, put the object's reset after a really big mob.  If you want to make something low-level on t
he ground, put it after a small mob.  Because of this, every area has to have at least one mob, though the mob doesn't have to do anything. If you want to make objects that will be sold at shops, their level is set by the server.  This varies from Merc to
 Merc and only applies to 'useful' objects.
\par 
\par *What are good bonuses for weapons?  Farside mud has a table of recommended +hit/+damage modifiers for weapons, it is pretty fair so I reproduce it here:
\par 
\par }\trowd \trgaph108\trleft717 \cellx1722\cellx2787\cellx4077\cellx5052 \pard \qc\intbl\box\brdrs\brdrw15\brsp20 {\b\f2\fs24 Level\cell Hit Roll\cell Dam Roll\cell Points\cell }\pard \intbl {\f2 \row }\trowd \trgaph108\trleft717 \cellx1722\cellx2787
\cellx4077\cellx5052 \pard \qc\intbl\box\brdrs\brdrw15\brsp20 {\b\f2 1-5\cell }{\f2 0\cell 0\cell 0\cell }\pard \intbl {\f2 \row }\pard \qc\intbl\box\brdrs\brdrw15\brsp20 {\b\f2 6-10\cell }{\f2 1\cell 0\cell 1\cell }\pard \intbl {\f2 \row }\pard \qc\intbl
\box\brdrs\brdrw15\brsp20 {\b\f2 11-15\cell }{\f2 1\cell 1\cell 3\cell }\pard \intbl {\f2 \row }\pard \qc\intbl\box\brdrs\brdrw15\brsp20 {\b\f2 16-20\cell }{\f2 2\cell 1\cell 4\cell }\pard \intbl {\f2 \row }\pard \qc\intbl\box\brdrs\brdrw15\brsp20 {\b\f2 
21-25\cell }{\f2 2\cell 2\cell 6\cell }\pard \intbl {\f2 \row }\pard \qc\intbl\box\brdrs\brdrw15\brsp20 {\b\f2 26-30\cell }{\f2 3\cell 2\cell 7\cell }\pard \intbl {\f2 \row }\pard \qc\intbl\box\brdrs\brdrw15\brsp20 {\b\f2 31-35\cell }{\f2 3\cell 3\cell 9
\cell }\pard \intbl {\f2 \row }\pard \qc\intbl\box\brdrs\brdrw15\brsp20 {\b\f2 36-40\cell }{\f2 4\cell 3\cell 10\cell }\pard \intbl {\f2 \row }\pard \qc\intbl\box\brdrs\brdrw15\brsp20 {\b\f2 41-45\cell }{\f2 4\cell 4\cell 12\cell }\pard \intbl {\f2 \row 
}\pard \qc\intbl\box\brdrs\brdrw15\brsp20 {\b\f2 46-47\cell }{\f2 5\cell 4\cell 13\cell }\pard \intbl {\f2 \row }\pard \qc\intbl\box\brdrs\brdrw15\brsp20 {\b\f2 48-49\cell }{\f2 5\cell 5\cell 15\cell }\pard \intbl {\f2 \row }\trowd \trgaph108\trleft717 
\cellx1722\cellx2787\cellx4077\cellx5052 \pard \qc\intbl\box\brdrs\brdrw15\brsp20 {\b\f2 50\cell }{\f2 6\cell 6\cell 18\cell }\pard \intbl {\f2 \row }\pard {\f2 
(Points is something that Farside charges for plusses on an object, and subtracts for minus, curses, etc.  They make objects meet certain "costs" to keep builders from putting in objects that are too powerful.  For a list of the rules they use (Lok's syst
em), ftp objects.doc from ftp.cs.odu.edu in /pub/caw.)
\par 
\par *Farside recommends the level of the spell in the staff or wand should never excede that of the level of the wand or staff.  The amount of charges can be calculated using Lok's system.  This also seems like a good way to assign object level.
\par 
\par Placing items on the ground in zones: In MZF, this is done from the }{\f2\uldb ROOMS dialog}{\v\f2 IDD_ROOM}{\f2 .\page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} hints:030}}{\f2  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 
\fs20 {\cs26\fs16\up6 #} IDD_SHOP}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Shops}}{\f2  }{\b\f2\fs28 Shops
\par }{\f2 
\par }{\b\f2\fs24 Keeper
\par }{\f2 The mobile who is the shopkeeper.  All mobiles with that }{\strike\f2 vnum}{\v\f2 vnum_topic}{\f2  will be shopkeepers.
\par 
\par }{\b\f2\fs24 Buy
\par }{\f2 Buys are item types which the 
shopkeeper will buy.  Unused slots should have a [none] in them; for instance, a shopkeeper who doesn't buy anything would have five [none]s.  Example:  The Midgaard wizard buys potions, scrolls, wands, staves, and [none].
\par 
\par The '%}{\b\f2 -buy}{\f2 ' number is a markup for players buying the item, in percentage points.  100 is nominal price; 150 is 50% markup, and so on.  The '%}{\b\f2 -sell' }{\f2 
number is a markdown for players selling the item, in percentage points.  100 is nominal price; 75 is a 25% markdown, and so on.  The buying markup should be at least 100, and the selling markdown should be at most 100.
\par 
\par The '}{\b\f2 open-hour}{\f2 ' and '}{\b\f2 close-hour}{\f2 
' numbers define the hours when the shopkeeper will do business.  For a 24-hour shop, these numbers would be 0 and 23.  (This is like military time.  A shop open from 0800 hours to 1900 hours would have 8 and 18.)
\par 
\par }{\b\f2\fs24 Comment
\par }{\f2 Usually the name of the mobile.
\par 
\par Note that there is no room number for a shop.  Just load the shopkeeper mobile into the room of your choice, and make it a sentinel.  Or, for a roving pedler, just make it non-sentinel.
\par 
\par The objects a shopkeeper sells are exactly those loaded by reset commands for that shopkeeper.  These items replenish automatically.  If a player sells an object to a shopkeeper, the shopkeeper will keep it for resale if he, she, or it doesn't already hav
e an identical object.  These items do not replenish.
\par 
\par }{\b\f2\fs24 TIPS and OBSERVATIONS
\par }{\f2 
\par *Any stationary mob can be a shopkeeper...this can advance the plot of a particular area no end if used cleverly.  (Actually, they don't even need to be stationary-Slash)
\par 
\par *Shopkeepers don't }{\f2\ul have}{\f2  to buy anything (e.g. Aod the Dealer).  Or sell anything...
\par 
\par *Shopkeepers can sell things that are needed to complete a zone, like maps and keys, that have no combat real value.  A key doesn't need to even look like a key, it can be a keycard, a ticket, a crown, etc.
\par 
\par *The level of the items the shopkeeper sells are set by the server.  In "standard" Merc2.2 weapons and armor always are in the range 5-15.  I have seen other Mercs where the range was 6-30.  Food and keys are always level 1. 
\par 
\par *There is no way to make 'rare' items that only appear from time to time.
\par 
\par *If you want a key to be expensive, you can give the shopkeeper some silly percentage like 5000.  Then the shopkeeper will sell the item for 50 times its server-set value.
\par \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} hints:005}}{\f2  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} proc_hints}}{\b\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $}
 Basics & Hints}}{\b\f2  }{\b\f2\fs28 Basics & Hints}{\b\f2 
\par }{\f2 
\par Users of MAKE.ZONES.FAST should have at least have some experience with DIKUs, and will understand the basic diku concepts of armor, levels, and the et cetera.
\par 
\par Nowadays, many mud-admins express the wish to have an entirely unique world.  Unfortunately, building is time consuming and requires no mean amount of skill, with the added 'bonus' of being hard to learn.  MZF tries to make it easier to build zones by let
ting writers use a GUI instead of putting numeric flags into a text editor.  Here are some basic rules:
\par 
\par }{\b\f2 Do it on paper first.  Do it big.
\par }{\f2 Areas always seem to shrink while you're building it, from a cross of aggravation and editing.  Having a map to work from helps a LOT when doing exits, and provides a visual impetus to getting all those tedious bits done.
\par 
\par }{\b\f2 An area will take twice as long as you think it will to build.
\par }{\f2 A certain boredom sets in sometimes.  just set it aside for awhile if this happens; its better to build when you want to then turn out something uninspired.
\par (Actually, there is no way to tell what the multiplier will be. it may be 10 times as long or more -- Slash)
\par 
\par }{\b\f2 Be fair with the items:
\par }{\f2 Good items should be hard to get.  Lousy items should require much less effort.  Give the most powerful items actually }{\f2\ul to}{\f2 
 a mob; theives and mages can often steal stuff on the ground without even bothering with the mob.  Thieves can also pick locks unless they are pick-proof, and any idiot with a pass door potion can walk right through any door...(unless it's PASS PROOF)

\par 
\par }{\b\f2 Entering your zone into MZF:
\par (Notice how low this is on the list.)  }{\f2 Get out your paper map and number all the rooms with two digit numbers.  Fire up MZF and open a new zone using }{\strike\f2 vnum}{\v\f2 vnum_topic}{\f2 
 9900 or your assigned vnum.  Enter all of your rooms in the order of the numbers on your map, then go back and enter all of your mobiles and all of your objects.  Then go back to your rooms, and reset mobiles into them using the "Mobile Add" button.  If 
you have a 'test server', you should test out the zone at this point and see how it looks.  W
hen you are satisfied with how your zone plays, use MZF to export your text to a word processor and spell check it, then put it onto the main server and start playing it!}{\b\f2 
\par }{\f2 
\par }{\b\f2 It's handy to be able to test new areas at home.
\par }{\strike Information on getting and running a test server}{\v proc_boot}{\f2 
\par 
\par }{\b\f2 Miscelleneous}{\f2 
\par *If you can't figure out how something was set up in the mud but want something like that in your zone you can get all the area files for Merc by anon ftp from the same place.
\par 
\par *Try to figure out what zones you liked to play in, and emulate the item and treasure distribution in them...
\par 
\par *If you are planning on submitting your zone to the net at large, the common practice is to replace the first two digits of all your }{\strike\f2 vnums}{\v\f2 vnum_topic}{\f2  with QQ.  Then, the imp who puts it in can assign a }{\strike\f2 vnum}{\v\f2 
vnum_topic}{\f2  quite simply with find/replace.  (Not everyone has a nifty RENUMBER like MZF)
\par }\pard \keepn {\f2 \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} credits:005}}{\f2  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} CM_HELPCREDITS}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 
\fs20 {\cs26\fs16\up6 $} Diku}}{\f2  }{\b\f2\fs28 Diku
\par }\pard {\b\f2\fs28 
\par }{\f2 Original game idea, concept, and design:
\par 
\par Katja Nyboe\tab \tab [Superwoman] (katz@freja.diku.dk)
\par Tom Madsen\tab \tab [Stormbringer] (noop@freja.diku.dk)
\par Hans Henrik Staerfeldt\tab [God] (bombman@freja.diku.dk)
\par Michael Seifert\tab \tab [Papi] (seifert@freja.diku.dk)
\par Sebastian Hammer\tab [Quinn] (quinn@freja.diku.dk)
\par 
\par Additional contributions from:
\par 
\par Michael Curran\tab the player title collection and additional locations.
\par Ragnar Loenn\tab the bulletin board.
\par Bill Wisner\tab for being the first to successfully port the game, uncovering several old bugs, uh, inconsistencies, in the process.
\par 
\par And: Mads Haar and Stephan Dahl for additional locations.
\par 
\par }\pard \keepn {\f2 Developed at: DIKU -- The Department of Computer Science at the University of Copenhagen.}{\b\f2\fs28 \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} credits:010}}{\b\f2\fs28  }{\cs26\fs16\up6 #{\footnote 
\pard\plain \s27 \fs20 {\cs26\fs16\up6 #} CM_HELPMERC}}{\b\f2\fs28  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Merc}}{\b\f2\fs28  Merc
\par }\pard {\b\f2\fs28 
\par }{\f2 This mud [editor] is based on Merc 2.2, created by Kahn, Hatchet, and Furey.  Merc 2.2
\par is an upgrade from Merc 2.1, created by Furey, Hatchet, and Kahn.  Merc 2.2
\par is available as Merc_22.tar.gz from ferkel.ucsb.edu (most files moved to
\par ftp.tcp.com), ftp.math.okstate.edu, marble.bu.edu, zen.btc.uwe.ac.uk
\par E-mail to 'merc-l-request@netcom.com' to join the merc mailing list.
\par 
\par Thanks to ...
\par   ... Diku Mud for starting it all.
\par   ... The Free Software Foundation and DJ Delorie for kick-ass tools.
\par   ... Copper Mud and Alfa Mud for releasing their code and worlds.
\par   ... Aod of Generic for ... well, everything.  You're a hoopy frood, Aod.
\par   ... Alander for many ideas and contributions.
\par   ... John Brothers of Silly for permission to use Silly code and worlds.
\par   ... Zrin for administering the mailing list.
\par   ... Abaddon for proofreading our comm.c.
\par   ... Hind, Quin, Vic, Diavolo, Oleg, and others for porting help.
\par   ... Diavolo, Grodyn, Morgenes, Da Pub, Loki, Talen, Kalgen, Sludge,
\par       The Crew of Salems Lot, and others for code and bug fixes.
\par   ... N'Atas-Ha for MOBPrograms and the pager skeleton and Blackstar
\par       for the improvements and ideas to the pager.
\par   ... Raff, Doctor, VampLestat, Nirrad, Tyrst, PinkF, Chris for worlds.
\par   ... Ikee, Chaos, Kraze, Maxx, Thoth, Zolstead, Zavod, VampLestat, Cyric,
\par       Kelvin, and Jackal for extensively playtesting MERC 2.2 and providing
\par       constructive input.
\par   ... the players and imps of Mud Dome, Final Mud, Mud Lite, Vego Mud, Rivers
\par       of Mud, Ruhr Mud, Mystic Realms, 4th Realm, Dragon Mud, and Salems Lot
\par       for bug reports, ideas, new code, and hours of enjoyment.
\par 
\par Share and enjoy.
\par }\pard \keepn {\f2 MERC Industries}{\b\f2\fs28 \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} credits:015}}{\b\f2\fs28  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} CM_HELPENVY}}{\b\f2\fs28  }{
\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Envy}}{\fs16\up6  }{\b\f2\fs28 Envy
\par }\pard {\b\f2\fs28 
\par }{\f2 This mud [editor] is based on EnvyMud 1.0, created by the EnvyMud Staff.  EnvyMud
\par is based on Merc 2.2, created by Kahn, Hatchet, and Furey.  Envy 1.0
\par is available as Envy_10.tar.gz from ferkel.ucsb.edu (most files moved to
\par ftp.tcp.com), ftp.math.okstate.edu, marble.bu.edu, and zen.btc.uwe.ac.uk
\par E-mail to 'merc-l-request@netcom.com' to join the merc mailing list.
\par 
\par Thanks to ...
\par   ... Diku Mud for starting it all.
\par   ... The Free Software Foundation and DJ Delorie for kick-ass tools.
\par   ... University of California at Berkeley Central Computing Services and
\par       Information Systems and Technology staff for providing the support
\par       and resources to develop and test EnvyMud release 1.0
\par   ... Copper Mud, Alfa Mud, ROM, ROM2, DALEMUD, Silly, and Circle for
\par       releasing their code and worlds.
\par   ... Jeremy Elson for help porting a few sites.
\par   ... Celeste for help in porting some more difficult-to-come-by sites.
\par   ... Zrin for administering the mailing list.
\par   ... RoX of Farside for just giving us a copy of the entire Farside mud.
\par   ... Locke and Surreality of The Isles for trading code with us.
\par   ... the many implementors and contributors on the merc mailing list
\par   ... the players and imps of Rivers of Mud, 4th Realm, Dragon Mud, Demonic
\par       Dreams, Farside, and The Isles for bug reports, ideas, new code, and
\par       hours of enjoyment
\par 
\par   ... AND the many players of EnvyMud for which this mud was created.
\par 
\par Share and enjoy.
\par }\pard \keepn {\f2 The EnvyMud Staf}{\b\f2\fs28 \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} credits:030}}{\b\f2\fs28  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} mzf_topic}}{\b\f2\fs28  }{
\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} MZF}}{\b\f2\fs28  }{\f2 \{bmc merccan.bmp\} }{\b\f2\fs28 MZF:  Make Zones Fast
\par }\pard {\f2 
\par Not a mud.  A zone editor.  Written by Slash (esnible@goodnet.com).  Portions }{\fs24 \'a9}{\f2  }{\strike\f2 DIKU}{\v\f2 CM_HELPCREDITS}{\f2 , }{\strike\f2 Merc Industries}{\v\f2 CM_HELPMERC}{\f2 , }{\strike\f2 EnvyMud}{\v\f2 CM_HELPENVY}{\f2 
, Builder5 of CAW, Borland, and Microsoft.
\par 
\par Some useful information is on the Merc mailing list:
\par merc-l@netcom.com\tab \tab The merc list
\par merc-l-request@netcom.com\tab Requests for additions, deletions, changes
\par merc-org@netcom.com\tab \tab zrin, furey, kahn, hatchet
\par 
\par Portions of this help text were taken from the AREA.TXT file that ships with }{\f2\uldb EnvyMud}{\v\f2 CM_HELPENVY}{\f2 , and the "Curious Area Builder" manual.  To obtain this manual, see the following note:
\par 
\par }{\b\i\f2 The Curious Area Workshops provides publicly available dikuMUD areas over anonymous ftp.  (ftp.cs.odu.edu in /pub/caw) We are always open to suggestions, bug reports, and criticisms.  Email us or contact us at NaVieMUD.
\par \tab Builder_5
\par \tab 11/11/93
\par \tab caw@cs.odu.edu
\par }{\i\f2 
\par }{\b\f2\fs24 Thanks:}{\f2 
\par    Madman & Tynian on The Final Challenge.
\par    Mort, GOD of LIGHT
\par    Steven of Troll, Simba and Amadeus of Barren Realms.
\par 
\par }{\b\f2\fs24 Flames/Contacting the author:
\par }{\f2 \{bmc slash1.bmp\} }{\b\f2 esnible@goodnet.com}{\f2 
\par }{\i\f2 
\par }{\f2 The following was written by Theodore Sturgeon, and forms the philosophic basis for MZF:
\par }{\b\i\f2 
I am by no means content with my own performance... which is why I am so eager to go back and back again.  I know was able to convey... some of the things which are important to me, and I know that I failed totally to make contact on others.  There is the
 matter of what one critic once called my "love affair with the English language."  To describe this at all is to restate the fact that a writer is the strangest of all lovers; for having installed writing as his mistress, h
e will then do his best to share her with other men.  I have been to see the painter who kept me standing on his icy doorstep while we talked because he was mixing a certain flesh-tone he had developed, and would not let me watch--I who know nothing about
 painting or paints.  I have known sculptors who kept special tools and cements under lock and key--not to protect against theft, but to conceal their very existence, hence "How do you do that?  How do you get that effect?" gets a knowing look and an arme
d 
silence.  But I have never met a writer who was not willing to share his innermost technical secrets and discoveries.  There is probably no single answer to this (there is, you know, no single answer to anything) but I suspect that the main reason lies in
 the fascinating concept }{\b\f2 feedback.
\par }{\f2 
\par (If you want to track down the book the essay came from, it's }{\b\f2 Clarion III}{\f2 , }{\f5 \'a91973 by Robin Scott Wilson.  Signet books, no ISBN.)}{\f2 
\par \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} hints:035}}{\f2  }{\cs26\fs16\up6 K{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 K} Resets;Mob Resets}}{\f2  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {
\cs26\fs16\up6 #} IDD_MOBRESET}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Mob Resets}}{\f2  }{\b\f2\fs28 Mob Resets
\par }{\f2 
\par The most important section of the area, and the easiest to mess up.  It is here that you place your mobs and equip them.
\par 
\par }{\b\f2\fs24 Mobile
\par }{\f2 This is the mobile you wish to place.
\par 
\par }{\b\f2\fs24 Location
\par }{\f2 This is the room to place the mobile in.
\par 
\par }{\b\f2\fs24 Count
\par }{\f2 This is where you specify the maximum number of mobiles with this }{\strike\f2 VNUM}{\v\f2 vnum_topic}{\f2  that can exist in the game.  The }{\b\f2 Count}{\f2 
 field is quite subtle.  For a mobile like a shopkeeper, you want a count of 1.  (You don't want to have two of "The Grocer" sitting in the store.).  For other mobiles,
 you want to specify the # of mobiles you want.  For example, if you want three dwarven guards, you specify a count of 3.  This doesn't mean that three guards pop right off the bat.  If you want three to pop immediately, you need to supply three mobiles o
n the rooms dialog.
\par It gets tricky when you attempt to RESET more or less mobiles than the }{\b\f2 count}{\f2 .  If you specify less mobiles than count, the mobiles will keep increasing at reset time until the count is made.  This is how the # of gnome guards seems to gr
ow.  If you specify more mobiles than count, the later ones never pop.
\par If you have mobiles that are SENTINELS, like the golems in Thalos, you get interesting effects when the mobiles are partly killed and the zone resets.  Initially, you get 2 golems in each of the four towers.  If someone kills both of the golems in the fou
rth tower, the golems repop in the }{\b\f2 first}{\f2  tower, leaving you a tower with 4 golems, 2 towers with 2 golems, and an empty tower.  If you want to avoid this effect, you need ot make 4 diffe
rent MOBILES.  A first tower golem with count 2, and second tower golem with count 2, etc.
\par 
\par }{\b\f2\fs24 Comment
\par }{\f2 
This is for any comment.  If you don't supply a comment, MZF will put the name of the mobile and the room in for you.  Although MZF tells you the room, without a comment specifying the mobile and the room people who only have the .ARE file will become con
fused.
\par 
\par }{\b\f2\fs24 Wields
\par }{\f2 This is where you specify the armor and weapon the mobile will be using.
\par 
\par }{\b\f2\fs24 Inventory
\par }{\f2 This is the items the mobile holds.  If the mobile is a shopkeeper, this are the items the shopkeeper will sell.  In addition the the }{\b\f2 Add}{\f2  and }{\b\f2 Delete}{\f2  buttons.
\par 
\par }{\b\f2\fs24 Hints:
\par }{\f2 
*All objects have a level limit, which is computed by inheritance from the most recently read 'M' command (whether it succeeded or not) in 'area_update' in 'db.c'.  As distributed, an object's level equals the mobile level minus 2, clipped to the range 0 
to 50.  (This means that the objects will take on the level of the mobile they pop on.)
\par }\pard \keepn {\f2 \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} hints:040}}{\f2  }{\cs26\fs16\up6 K{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 K} Applies}}{\f2  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {
\cs26\fs16\up6 #} IDD_APPLY}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Applies}}{\f2  }{\b\f2\fs28 Applies
\par }\pard {\f2 
\par An item apply is a particular effect the item has upon the holder/wielder/wearer's statistics.  There can be any number of applies on an object.
\par 
\par }{\i\f2 Better AC and Saving Throws are more negative.
\par Save Vs Breath and Save Vs Rod are added to all saving throws in Merc.
\par }{\f2 
\par }{\b\f2 Strength}{\f2 
\par }{\b\f2 Dexterity}{\f2 
\par }{\b\f2 Intelligence}{\f2 
\par }{\b\f2 Wisdom}{\f2 
\par }{\b\f2 Constitution}{\f2 
\par }{\b\f2 Age}{\f2 \tab \tab \tab (Has no effect on game play)
\par }{\b\f2 Mana}{\f2 
\par }{\b\f2 Hit Points}{\f2 
\par }{\b\f2 Move Points}{\f2 
\par }{\b\f2 AC}{\f2 \tab \tab \tab A negative number her makes the AC 'better'.  A positive is 'cursed armor'
\par }{\b\f2 Hit Roll}{\f2 
\par }{\b\f2 Damage Roll}{\f2 
\par }{\b\f2 Save vs Breath}{\f2 \tab (Same as "Save vs Spell")
\par }{\b\f2 Save vs Spell}{\f2 
\par 
\par }{\b\f2\fs24 TIPS and OBSERVATIONS
\par }{\f2 *Items with applies to stats over +3 should be very rare on most muds, and hard to get.  (They should probably minus some other stat, too, like a super-piece of armor that cuts dexterity.)
\par 
\par *Players like +CON and +WIS items when they level, and +STR and +DEX items at other times.  This causes some players to get a set of 'leveling gear' with applies they would not be caught dead using at other times.  A
 good way to deal with this is to make the applies all holdable objects, so the player can't use the diploma...  Another good way is to make the object NOREMOVE, so if the player is going to be using it for leveling, they have to play with it too.
\par 
\par *Having a really high strength and boosting it with +STR items makes the game }{\b\f2 A LOT}{\f2 
 easier.  It is a Merc tradition to make +STR items really heavy so people don't use them a lot unless they already have 17 or 18 strength, e.g. the troll skin at like 50kg or the pale blue stone at 10kg.
\par 
\par *There is no way to have an object give a player a skill, like making a lock pick that boosts lock picking 10% or a helmet of dwarf language speaking.  There is also no way to give specific damage bonuses against certain mobs, such as a sword of dragon sl
aying.
\par 
\par *If you are making armor and want it to have a certain AC value, you are out of luck, as the server will set it to a few levels below the mob, thus a 28th level princess will have a 26th level AC7 frilly petticoat.  The way
 that you can get around this is to make the petticoat a container (like the backpack) or treasure (like a necklace).  Then, you set the object to have an AC applies to the AC that you want...  The level will still be high, though.  Also note that COMPare
 will not work right if you do this.
\par 
\par *You can put applies on anything, even potions and wands and stuff.  People might think twice about using a wand of HEAL if it was +2 wis...
\par 
\par *Weapons are items of death and destruction and as such they should be treated that way while making them.  Only rarely should + stats be added to a weapon and ever more rare should be +wis or +int weapons (notable exception a wizard's staff).
\par \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} hints:045}}{\f2  }{\cs26\fs16\up6 K{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 K} Exits}}{\f2  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #}
 IDD_EXIT}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Exits}}{\f2  }{\b\f2\fs28 Exits
\par }{\f2 
\par The }{\b\f2 to room}{\f2  is the room the exit leads to.  Each side of a room should have this in most cases.
\par 
\par If the exit is a door, it needs a }{\b\f2 key}{\f2 , or [none] to indicate that it doesn't lock.  A key can be any object, although this editor only lets 'key' type objects be keys.
\par 
\par The }{\b\f2 exit description}{\f2 
 is used for when a player types look <direction>.  This should in most cases be a vague description of what the next room might be.  Each exit starts with its own direction field, and contains a door keyword list and door description.  Note that players 
can LOOK EAST even at night without being told that it is too dark.
\par 
\par The }{\b\f2 door keyword list}{\f2 , used for manipulative door actions, such as open, close, pick, etc.  These words are separated by a space.  If there is more than one word, the server will 'reply' w
ith the first word.  For example, if the keyword list is 'door hole', and the player types 'OPEN HOLE', then the other players will see 'Slash opens the door.'  The server doesn't know about plurals here, so if you have a pair of doors with keyword "doors
" someone on the other side will see "A doors opens."  A door keyword list isn't mandatory for a door, as the server lets the direction (north, south, etc.) serve as an alternate, and the word "door" will work if the keyword list is empty.
\par 
\par Please note that adding a description for the door itself is usually done under the 'extra descriptions' part of the room.
\par }\pard \keepn {\f2 \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} hints:050}}{\f2  }{\cs26\fs16\up6 K{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 K} Helps}}{\f2  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {
\cs26\fs16\up6 #} IDD_HELPS}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Helps}}{\f2  }{\b\f2\fs28 Helps
\par }\pard {\f2 
\par }{\b\f2 Level
\par }{\f2 The 'level' number is the minimum level necessary to read the help for the given topic.  For example, the help on IMMTALK is set at 50, so only players of level 50 or higher can read the helps for the 'immtalk' command.
\par 
\par Normally when a player uses 'help', both the keywords and the help-text are shown.  If the 'level' is negative, however, t
he keywords are suppressed.  This allows the help file mechanism to be used for certain other commands, such as the initial 'greetings' text.
\par 
\par }{\b\f2 Keywords
\par }{\f2 
The 'keywords' are the text strings that must be matched in order to see this particular help entry.  Case is unimportant, though typically the keywords are capitalized.  For two-word entries, single quotes must be placed around each phrase.  For example:

\par 
\par 'CURE POISON'
\par 
\par }{\b\f2 Text
\par }{\f2 The 'help-text' of the help is completely at the discretion of the builder.  Spells usually give a syntax example, followed by a summary:
\par 
\par Syntax: cast 'cure poison' <victim>
\par 
\par This spell will remove the effects of poison from the victim's body.
\par 
\par If a 'help-text' begins with a leading '.', the leading '.' is stripped off.  This provides for an escape mechanism from the usual leading-blank stripping of strings, so that picturesque greeting screens may be used.
\par 
\par }{\b\f2\fs24 Hints:
\par }{\f2 (HELPS are usually omitted from area files but may be included to better enhance your area.  For instance, your zone contain
ing many dwarves might have a HELP DWARF section.  This individual help gets tacked onto the pool of all helps.  Conflicting helps are resolved by EnvyMud by displaying the first instance of the help.)
\par 
\par Generally, all helps are placed in one file, help.are, that contains no other sections.
\par \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} hints:060}}{\f2  }{\cs26\fs16\up6 K{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 K} Random Objects}}{\f2  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 
#} IDD_RANDOMDIALOG}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Random Objects}}{\f2  }{\b\f2\fs28 Random Objects (TFC mode only)
\par }{\f2 
\par }{\b\f2\fs24 Type
\par }{\b\f2 Weapon}{\f2 \tab Item will be a weapon
\par }{\b\f2 Armor}{\f2 \tab \tab Item will be armor
\par }{\b\f2 Potion}{\f2 \tab \tab Item will be a potion
\par }{\b\f2 Misc}{\f2 \tab \tab Item will be any of the above, plus others like 'Scroll'
\par 
\par }{\b\f2\fs24 Quality
\par }{\b\f2 Shoddy}{\f2 
\par }{\b\f2 Decent}{\f2 
\par }{\b\f2 Fine}{\f2 
\par }{\b\f2 Extraordinary}{\f2 
\par 
\par }{\b\f2\fs24 Initial Position
\par }{\b\f2 Inventory}{\f2 \tab \tab Mob will have the item in its inventory
\par }{\b\f2 Wielded/Worn}{\f2 \tab Mob will try to wear or wield the item.\page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} hints:070}}{\f2  }{\cs26\fs16\up6 K{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 K} Select an Object}}{
\f2  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} IDD_OBJLIST}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Select an Object}}{\f2  }{\b\f2\fs28 Select an Object
\par }{\f2 
\par (This screen under construction.  Just click on an object).\page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} hints:080}}{\f2  }{\cs26\fs16\up6 K{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 K} File Format}}{\f2  }{
\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} IDD_FTYPEDIALOG}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} File Format}}{\f2  }{\b\f2\fs28 File Format
\par }{\f2 
\par Different servers use different formats to store area file information.  MAKE.ZONES.FAST has the ability to read and write files in Merc 2.x, TFC 1.x, and EnvyMud format, and read ROM 2.x format.  Because files aren't stored internally in a particular for
mat, it is possible to load a file in one format, e.g. Merc, and save in another format, e.g. Envy.  This allows area files to be moved back and forth between different servers.
\par 
\par }{\b\f2 Note to TFC format users:  MZF only supports TFC 1.x features.  You will not be able to read the current TFC 2.x new features into MZF.
\par 
\par Note to ROM format users:  ROM format is not finished.  Currently, MZF can only be used to view and convert from ROM to other file formats.  Also, certain racial characteristics do not convert yet.}{\f2 
\par 
\par If you get errors reading in an area file, you may be trying to read a file set to the wrong format.  It is also possible that the file has been made '}{\strike\f2 vnum}{\v\f2 vnum_topic}{\f2 
 neutral' by replacing the first two digits in each vnum with an alpha constant, such as QQ.  MZF cannot read zones in the neutral format, so you need to use a text editor to replace the QQ with some other number such as 99 before you read the area file.

\par 
\par The basic difference between the Merc and Envy zone formats is the interpretation of the 'value0 - value3' fields.  Envy uses text and a ~ for each field, Merc expects a number.
\par 
\par }{\b\f2 Note that MZF reads files of the format of the Envy 1.0 release, not the format of actual EnvyMud, which has since been modified to include mob races and attack types.
\par }{\f2 
\par The file format you choose also determines whether certain controls are available to you inside the MZF dialogs.  If you cannot select an option, it may not be supported by the server you have set in FILE FORMAT.
\par 
\par M.Z.F. now include support for }{\strike\f2 MOBprograms}{\v IDD_MOBPROG}{\f2 .  MOBprograms are typically only supported by Merc2.2 based servers, but some other servers like Troll's support them.  Ask your IMP.
\par 
\par If you have a document you wish to remove MOBprograms from, you can turn off MOBprograms, then when you save the document the MOBprograms will be stripped.
\par 
\par }{\b\f2 Font size:
\par }{\f2 
To change the size of your fixed font, use "thinner" and "wider" to make sure that the eighty columns of text displayed in the test window are the correct width--as close to the exact width of the text window as your system can do.  When you have the corr
ect width, select "taller" and "shorter" until you get a font that looks as "nice" as you can have it on your system.
\par \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} hints:090}}{\f2  }{\cs26\fs16\up6 K{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 K} Control Panel}}{\f2  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #
} IDD_PANELDIALOG}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Control Panel}}{\f2  }{\b\f2\fs28 Control Panel
\par }{\f2 
\par }{\b\f2\fs24 Name
\par }{\f2 The 'area-name' can be any string.  The 'areas' command provides a list of areas, so it's worth while to follow the standard Merc format for this string:
\par 
\par     #AREA \{ 5 35\} Merc    Prototype for New Area
\par 
\par The first two numbers are recommended level range.  The name is the name of the original author of the area.  The last phrase is the name of the area.
\par 
\par }{\b\f2\fs24 Recall Room}{\f2  (EnvyMud format only)
\par The 'recall-point' gives the }{\strike\f2 vnum}{\v\f2 vnum_topic}{\f2  
of the room to which a player will recall if they attempt to do so anywhere within the area defined in the current file.  If this section is omitted, the recall point will be the standard ROOM_VNUM_TEMPLE as defined in merc.h.  It is distributed as room v
num 3001 in midgaard.are.  If the 'recall-point' is invalid, the player is unable to recall when attempted in the zone.  This function was added by Kahn to allow for builder-settable recall points.
\par 
\par }{\b\f2\fs24 Make mobs weaker/stronger
\par }{\f2 Use these two buttons to scale the level of the mobiles in your zones up or down.
\par 
\par }{\b\f2\fs24 Renumber
\par }{\f2 Renumber will prompt you for a starting }{\strike\f2 vnum}{\v\f2 vnum_topic}{\f2 
.  It will then renumber all objects/rooms/mobiles starting from that vnum.  This can be used to move zones about the vnum space or to remove 'holes' caused by deleting rooms.
\par 
\par }{\b\f2\fs24 Troll area data
\par }{\f2 This option allows you to set up your #AREADATA section if you are writing zones for Troll MUD.  If you don't play Troll MUD, don't select this.
\par 
\par }{\b\f2\fs24 Text to clipboard
\par }{\f2 This is for spell checking.  After you click this, you may go to your word processor and "paste" all of the zone text that can be seen by players into your word processor.  At this point, you may run your spell checker.
\par 
\par This is an improvement over the old method of spell checking, where you loaded the complete .ARE file into the spell checker and recieved errors like }{\i\f2 #3001 is not a word}{\f2 .\page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {
\cs26\fs16\up6 +} hints:010}}{\f2  }{\cs26\fs16\up6 K{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 K} Booting;Testing}}{\f2  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} proc_boot}}{\f2  }{\cs26\fs16\up6 ${\footnote 
\pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Booting and testing areas}}{\f2  }{\b\f2\fs28 Booting and testing areas
\par }{\f2 
\par Source code for Merc 2.2 is available from ftp.math.okstate.edu.  Source code for Envy 1.0 is available from ftp.atinc.com.  These versions work under most }{\b\f2 Unix}{\f2  varients, including }{\b\f2 Linux}{\f2 .  Merc can be compiled for }{\b\f2 
MS-DOS}{\f2  only with the GNU DJCPP compiler, available from many GNU ftp sites.  A compiled version of Merc can be obtained from ftp.atinc.com /pub/mud/builders.  You need to get GO32.EXE and MERC.EXE and type \ldblquote GO32 MERC\rdblquote 
 to run it.  A compiled }{\b\f2 Macintosh}{\f2  version of Merc 2.2 is available from ftp.math.okstate.edu.  A compiled }{\i\f2 multi-user}{\f2  Merc 2.2+races for }{\b\f2 Windows}{\f2 
 is available from ftp.indirect.com /pub/software/mud.  The current alpha test requires mercw32.zip, mercw32a.zip, Trumpet or compatible Winsock, Win32s and Trumptel or compatible telnet are required., all of which are available on the net for free.  (Not
e that a network card or SLIP account is not required, but 8 Megs of RAM is.)  For }{\b\f2 Windows NT}{\f2  3.5x users, you don\rquote 
t need anything besides mercw32.zip and mercw32a.zip, but you need 16 Megs of RAM.)  Source for this version is available via email from http://www.goodnet.com/~esnible/mudserver.html.
\par 
\par }{\i\f2 (Taken from the Merc/Envy documentation.  You cannot boot and test with MZF.)
\par 
\par }{\f2 When the Merc server starts, it reads a file named 'area.lst' in the current directory.  This file contains a list of all the area files to read in.  To add or delete areas, simply edit area.lst.
\par 
\par The server reads all of the area files into memory once at load time and then closes them.  Thus you can edit area files while the server is running.  Changes will take effect the next time the server boots.  Because the server is completely memory-based,
 zone resets are fast, too.  (And paradoxically, moving to a memory-based system allowed certain memory optimizations to be made, cutting memory usage by 50% from Merc 1.0).
\par 
\par You can test areas by running Merc in a different directory with a different 'area
.lst' file with new areas dropped into it.  Setting up an appropriate directory structure is an exercise for the student.  (You DID say you're running a mud because you wanted to learn more about system administration, right?)  Hint: you can run a program
 in another directory just by invoking its full name: '../src/merc', for example.
\par 
\par The server reports syntax errors, including the area file name and a line number.  Take the line number with a grain of salt; some kinds of errors cause the server to run on for quite a few lines before ultimately detecting the error.
\par 
\par The server also reports semantic errors, such as references to non-existent mobiles, objects, or rooms.
\par 
\par Error recovery is simply not possible without far more sophisticated input parsing than we're willing to write.  (Hey, feel free to write your own.)  Thus the server exits after reporting any error.  Merc takes only a few seconds to load, however, so it's
 quite practical to use the whole server as a syntax checker.
\par 
\par }{\b\f2 Compressing the Area Files
\par }{\f2 
\par It is possible to run Merc with a single combined, compressed area file.  Here's how to do this on a UNIX system:
\par 
\par (1) In 'area.lst', remove the last line (the '$' line).
\par 
\par (2) Execute the command:
\par 
\par \tab cat `cat area.lst` | compress > all_area.Z
\par 
\par (3) Edit 'area.lst' again.  Insert a '-' at the beginning of every line.  Do not put any spaces between the '-' and the file name.  Put the last '$' line back at the end of the file.
\par 
\par (4) Edit 'startup'.  Change the line:
\par 
\par \tab ../src/merc 4000 >&! $logfile
\par 
\par to:
\par 
\par \tab zcat all_area.Z | ../src/merc 4000 >&! $logfile
\par 
\par (5) Test the changes so far.  Merc should start up normally, although it
\par     may take a few seconds longer to zcat everything.
\par 
\par Now you can remove all the original *.are files.
\par 
\par Notice that all of the compression and decompression takes place outside of the Merc server.  Thus, you can substitute any archiving program of your choice, as long as it can write its output to standard output.
\par 
\par You can recover the original areas simply by running 'uncompress all_area.Z' and dissecting them out of all_area.
\par 
\par From the server's point of view, when an area file name starts with '-', it simply reads standard input for the area, terminating at '#$' as usual (but without closing standard input).  Diagnostic messages are given with the full name (e.g. '-arachnos.are
'), but the line number will be reported as zero.
\par 
\par You can freely mix areas from standard input with ordinary area files.  Thus, you could compress all the Merc standard zones into a file such as merc_area.Z, prefixing th
em with '-' in 'area.lst'.  Then you could add your own areas anywhere in the file (beginning, middle, end, wherever your areas need to go), and omit the '-' on the lines for your areas.
\par 
\par The server will take a little longer to load with compressed area files, because 'zcat' needs time to run.  This is offset by a reduction in time spent opening disk files.  After loading, the server has all of the area database in memory and never rereads
 the files.  Thus, there is zero performance impact on server operation after loading.
\par 
\par === Memory Usage
\par 
\par In order to simplify the code, the EnvyMud server has a fixed maximum size on strings in the area database.  This size is defined at the beginning of 'db.c' with a '#define' statement.  As distributed, this size is:
\par 
\par     #define MAX_STRING\tab  1500000
\par 
\par This size is about 10% larger than needed for the areas we distribute.  Thus, you can add about 4 more areas without touching the server at all.  The server
 will tell you when the string table overflows, and you can simply increase the maximum limit and recompile.  The immortal 'memory' command will show you memory usage from within the game.
\par 
\par There is no other limit on area sizes or memory usage.
\par 
\par We decided to use a fixed size because it simplifies our job.  It also allows significant performance improvements: compare our load time and memory usage versus other Diku muds with the same quantity of areas.
\par \page }{\cs26\fs16\up6 K{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 K} #SECTIONS}}{\f2  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} CM_VIEWCREATE}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $
} Selecting other #SECTIONS}}{\f2  }{\b\f2\fs28 Selecting other #SECTIONS to view
\par }{\f2 
\par \{bmc addview.bmp\} 
\par Use the mouse to select the view you wish to work with.  Letting go of the mouse outside the box or pressing ESCAPE will abort the selection of a new view.\page }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} CM_EDITADD}}{\f2  }{
\b\f2\fs28 Adding a new room/mobile/object/help.
\par }{\f2 
\par This menu option brings up the dialog appropriate for the current view, and provides a 'boilerplate' of the appropriate type.\page }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} CM_EDITITEM}}{\f2  }{\b\f2\fs28 
Editing the current item
\par }{\f2 
\par This menu option brings up a dialog box appropriate for the particular item type being viewed.  To change the current item type, see Window|}{\strike\f2 Add View}{\v\f2 CM_VIEWCREATE}{\f2 .\page }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {
\cs26\fs16\up6 #} IDD_EXTRADIA}}{\f2  }{\b\f2\fs28 Extras Dialog
\par }{\f2 
\par }{\b\f2\fs24 Keywords
\par }{\f2 The 'keywords' are the text strings that must be matched in order to see this particular description.
\par Example:
\par }{\f2\fs24 sign
\par }{\f2 
\par }{\b\f2\fs24 Description
\par }{\f2 The description is what the player sees when he or she (or possibly it if SEX CHANGED) LOOKs at the keywords.  Example:
\par }{\f2\fs24 You see a sign welcoming you to the mud.
\par }{\f2 \page }{\cs26\fs16\up6 K{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 K} VNUM}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Virtual Numbers}}{\f2  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {
\cs26\fs16\up6 #} vnum_topic}}{\f2  }{\b\f2\fs28 Virtual Numbers}{\f2 
\par 
\par A }{\b\f2 Virtual Number}{\f2  or }{\b\f2 VNUM}{\f2 
 is just a number that MUD servers use to keep track of things.  Each room, mobile, and object has a vnum.  These vnums must be unique for their class, if you have a 'bloody sword' with vnum 1234 you must not have any other objects with vnum 1234 in the e
ntire world, although you may have a mobile 1234 and a room 1234 and the mobile and room don't have to have anything to do with the sword.
\par 
\par To keep area files from stepping on each others v
nums, there is a tradition of each zone being assign a two or three digit vnum as a 'starter', such as 42.  Then, the zone is expected to make all vnums in the formst 42XX.  When you start a new zone with MZF, it asks for the starter vnum.  You are given 
9900 as a default.  If you start with that and go create 3 rooms, the rooms will be numbered 9900, 9901, and 9902.  This is reasonable, except that everyone with MZF could start zones at 9900, and then collisions occur when the zones are put into play on 
the same server.  For that reason, the best policy is to ask your IMP what vnum he wants you to use and start with that.  If you don't know yet, start with 9900 and you can later renumber you zone with MZF.
\par 
\par The zones in stanard Merc 2.2 are the following
\par }{\f11\fs16 00 limbo.are    20 catacomb.are 40 moria.are    60 haon.are     80 -           
\par 01 smurf.are    21 hood.are     41 moria.are    61 haon.are     81 -           
\par 02 -            22 draconia.are 42 -            62 -            82 -           
\par 03 plains.are   23 mahntor.are  43 -            63 arachnos.are 83 marsh.are   
\par 04 -            24 -            44 -            64 -            84 -           
\par 05 -            25 -            45 -            65 dwarven.are  85 -           
\par 06 ofcol2.are   26 -            46 -            66 daycare.are  86 dream.are   
\par 07 -            27 -            47 juargan.are  67 -            87 -           
\par 08 -            28 trollden.are 48 -            68 -            88 -           
\par 09 olympus.are  29 firenewt.are 49 -            69 -            89 grove.are   
\par 10 air.are      30 midgaard.are 50 eastern.are  70 sewer.are    90 -           
\par 11 shire.are    31 midgaard.are 51 drow.are     71 sewer.are    91 dylan.are   
\par 12 hitower.are  32 midgaard.are 52 thalos.are   72 sewer.are    92 canyon.are  
\par 13 hitower.are  33 midgaard.are 53 mirror.are   73 sewer.are    93 galaxy.are  
\par 14 hitower.are  34 chapel.are   54 -            74 sewer.are    94 mobfact.are 
\par 15 gnome.are    35 midennir.are 55 ofcol.are    75 -            95 -           
\par 16 wyvern.are   36 grave.are    56 -            76 -            96 -           
\par 17 wyvern.are   37 school.are   57 -            77 -            97 -           
\par 18 -            38 -            58 -            78 valley.are   98 -           
\par 19 -            39 moria.are    59 -            79 redferne.are 99 -           
\par 
\par }{\f2 (Note that you can go past 99xx, all the way up to 654xx.)
\par 
\par When you are working with MZF, it will be generating vnums for you.  You don't need to look at these numbers unless
 you are generating zones with a lot of 'similar' objects, such as two 'cityguards'.  Then you can look at the numbers and tell which is which.
\par 
\par Sometimes if you look at the raw text for an area, you will see vnums with letters at the beginning, such as XX00 or QQ00.  These zones have been made }{\b\f2 vnum neutral}{\f2 
 to allow anyone to put them into a server without conflict.  The IMP looks up an empty vnum, and then replaces all occurances of (say) QQ with the code he has assigned.  MZF will not read or write currently in the vnum neutral format.
\par }{\f11\fs16 \page }{\cs26\fs16\up6 K{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 K} Intro to MZF;MZF}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Intro to M.Z.F.}}{\f2  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 
\fs20 {\cs26\fs16\up6 #} mzf_hints}}{\f2  }{\b\f2\fs28 Intro to M.Z.F. (0.97}{\b\fs28 a Public alpha 2)}{\b\f2\fs28 
\par }{\f2 
\par }{\b\f2 MAKE.ZONES.FAST}{\f2  is a freeware area editor for Merc, ROM and EnvyMud }{\strike\f2 format}{\v\f2 IDD_FTYPEDIALOG}{\f2  MUDs.
\par 
\par }{\b\f2 MZF}{\f2  has been tested under Windows 3.1, WfWG, and Windows NT 3.5x.  Please don't ask for a DOS version.  MZF 0.90 was tested on the Macintosh under an emulator, and seemed to work.  This alpha has only been tested by me under Windows NT 3.51.

\par 
\par MZF calls area files 'documents'.  More than one area file can be opened at a time, you can keep opening zones unti
l MZF runs out of memory, usually at about 40 at once.  MZF is tested by opening all of the zones for standard Merc 2.2, or half the Envy 1.0 zones, at the same time.  When a document is opened, a 'view' is opened to allow the document to be edited.  This
 'view' is a list of all the rooms in the zone.  To look at something else, such as objects or mobiles, select 'add view' or click the glasses icon on the speed bar.
\par 
\par To edit something, double click on the item to edit in the list view.  Keyboard users can use "}{\f2\ul E}{\f2 dit|Edit }{\f2\ul I}{\f2 
tem" to edit the item.  Editing a line in a list view brings up a dialog box for the item.  To add a new something, click the '+' icon or select "}{\f2\ul E}{\f2 dit|}{\f2\ul A}{\f2 dd Item".
\par 
\par MZF does not currently fully support MOBprograms.
\par 
\par }{\b\f2\fs24 Current Limitations:
\par }{\f2 
MZF does not allow #RESETS to be deleted.  (Deleting 'M' mob resets is supported, but only on the room dialog and mob resets window.)  There is no real reason forbid this, although it plays heck with the level of items reset to the ground.  I hope to fix 
this soon.
\par 
\par MZF does not allow editing of 'exit randomization' or 'object into container' resets.  This will be fixed in the next beta.  Sorry.  You can currently view the 'exit randomization' on the rooms dialog, that is where you will be able to edit it one day.

\par 
\par }{\b\f2\fs24 Request for help:
\par }{\f2    I'm not happy with the mapper.  I would really like to be able to "zoom" out for the editing and viewing and printing of t
he entire zone.  To do this, I need a way to calculate the 'latitude and logitude' of each room.  If you know how to do this, let me know.
\par 
\par }{\b\f2\fs24 Known Bugs:
\par }{\f2    If you put tildes (~) in your text, you probably will get a zone that doesn't load.
\par 
\par    (32 bit only) The Windows NT help system scrambles the lines on some of the tables, such as the room tables.  This seems to be an NT WINHELP problem, the same help file appears fine under standard 16 bit WINHELP, even under NT.
\par 
\par }{\b\f2\fs24 FAQs:
\par o Where can I get the latest MZF/MZF source code/more MUD information?
\par }{\f2\fs24    You can get MZF information and other MUD info from http://www.goodnet.com/~esnible/mzf.html
\par }{\b\f2\fs24 
\par }{\b\f2 o Ok, how do I add the customizations I have done to my MUD to MZF?
\par }{\f2    There are several new WIN.INI entries for MUD customization.  In the future, I hope you will be able to make your customizations through MZF, and I hope to support more customizations, but for now we allow:
\par    3 new room flags
\par    Up to 3 new object types.
\par    Unlimited new mobile spec-fun and spells
\par 
\par You enter them in }{\b\f2 WIN.INI}{\f2  like this:
\par 
\par }{\f11 [MAKE.ZONES.FAST]
\par ; Three custom object types are allowed
\par ObjType27=Portal
\par ObjType28=Rune
\par ObjType29=
\par ; Three custom room flags are allowed, and must be these values
\par RFlag65536=BFS Mark
\par RFlag131072=Anti-Magic
\par RFlag262144=Arena
\par ; Add some new spec funs
\par specfun0=wand_user
\par specfun1=food_stealer
\par ; Add some new spells
\par spell0=101/web
\par spell1=102/sticks to snakes
\par 
\par }{\f2 You }{\i\f2 must}{\f2  include the number before the spell.  This is the \lquote slot number\rquote  used by Merc, TFC, and ROM.  Your IMP can give you this number.  If you are using Envy, this number isn\rquote 
t necessary, but MZF makes you put in one anyway.  Make one up.
\par 
\par (The }{\b\f2 WIN.INI}{\f2  will be located in your \\WINDOWS, \\WIN31, \\WFWG, or \\WINNT35 directory.  You can edit it with NOTEPAD.)
\par 
\par }{\b\f2 o My fonts are the wrong size!
\par }{\f2    The fonts are set up for the 'small font' option of most monitors.  If they are too big, too small, etc. you can go into }{\strike\f2 "File Format"}{\v IDD_FTYPEDIALOG}{\f2  and change the size of your font.
\par 
\par }{\b\f2 o It is just showing me rooms, and that is all I can make!
\par }{\f2    Click on the "glasses" icon or select "}{\f2\ul W}{\f2 indow|Add }{\f2\ul V}{\f2 iew"
\par 
\par }{\b\f2 o Why can I use Cut and Copy but not Paste?
\par }{\f2    This is for people who like to make zones in a text editor.  You make a mob, copy it to the clipboard and then into your editor.
\par 
\par }{\b\f2 o How do I make a lot of similar rooms really fast without Paste, then?
\par }{\f2 
   Use the mouse to select the long description, then use Ctrl-Insert to copy the long description to the clipboard.  When you make a new room, use Shift- Insert to paste the long description.  Everything else except the short description is 'sticky'.  Al
ternates for Ctrl-Insert and Shift-Insert are Ctrl-C (copy) and Ctrl-V (paste).  You must have a mouse to select the text.
\par 
\par }{\b\f2 o I'm getting "fread_number()" errors when I try to load a zone.
\par }{\f2    Check the "}{\f2\ul F}{\f2 ile|}{\f2\ul F}{\f2 ile Formats" dialog to make sure that you are using the correct file type.  You must be in Envy mode to read Envy zones, and Merc mode Merc zones.
\par or
\par    You are reading a zone that has been made }{\strike\f2 vnum}{\f2 v}{\v\f2 num_topic}{\f2  neutral, in which case you need to edit the zone to an actual vnum before you can begin.
\par 
\par }{\b\f2 o How do I create rooms easily?
\par }{\f2    Create the first room by clicking on "+".  Fi
ll out the dialog.  Select "Create" mode and the direction you wish to go, then click on "Make".  Having two modes is kind of strange, but in testing I found that it was too easy to accidently make rooms when trying to walk around, so I put the "Walk" mod
e in.
\par 
\par }{\b\f2 o Why isn't there a 'walkthrough' mode like Dikued and AEWin have?
\par }{\f2    I use Merc2.2 and Envy1.0 for walkthroughs.  }{\f2\uldb Booting and testing areas with a test server.}{\v\f2 proc_boot}{\f2 
\par 
\par }{\b\f2 o It's telling me that ctl3d isn't installed correctly.
\par }{\f2    CTL3DV2.DLL is a DLL that gives dialogs a grey, "chiseled" appearance.  This must be in the \\WINDOWS\\SYSTEM directory.  There cannot be a copy of it in the program directory.  (If you are using Windows NT, the file CTL3D32.DLL must be in the \\
WINNT35\\SYSTEM32 directory.)
\par 
\par }{\b\f2 o What is the difference between MZF and MZF32i
\par }{\f2    MZF32i is for Windows NT/Intel and Windows \lquote 95.  It has only been tested under Windows NT 3.5.  Currently, the two versions are exactly the same, but in the future there will be minor changes to support Window\rquote 
s 95 user interface and to allow zone files to be text-edited from inside MZF on NT.
\par 
\par }{\b\f2\fs24 Copyright:
\par }{\f2    MZF is a derivative work of }{\strike\f2 DikuMud}{\v\f2 CM_HELPCREDITS}{\f2 , }{\strike\f2 Merc}{\v\f2 CM_HELPMERC}{\f2 , and }{\strike\f2 EnvyMud}{\v\f2 CM_HELPENVY}{\f2 .  These copyrighted programs have restrictions on how they can be cop
ied.  You must abide by these restrictions, which include "you can't charge money for copying this--even the normal $5 fee \lquote just for the disk\rquote ".  Sorry.  The full text of DIKU's restrictions should be in the archive you obtained MZF in.

\par    MZF includes }{\f2\uldb ROM}{\v\f2 CM_HELPROM}{\f2  2.4 code for loading ROM-style .ARE files.  ROM is a copyrighted program.
\par    Feel free to put MZF up on your ftp site, with any modifications you wish, as long as you don\rquote t alter \ldblquote license.doc.\rdblquote  or remove/alter the menu options of \ldblquote Help Credits\rdblquote , \ldblquote Help Merc\rdblquote , or 
\ldblquote Help Envy.\rdblquote 
\par 
\par    MZF is written in Borland C++ 4.5.  My license with them forbids me to
 allow you to disassemble their library to see how it works.  So don't do that.  (They give the source code to their library away when you buy their compiler anyway.  Use that.)  MZF also uses Microsoft's CTL3DV2.DLL which isn't supposed to be copied exce
pt as a part of a working program.  So if you must give someone a copy of CTL3D, you have to give them all of MZF or some other program that uses it along with it.
\par 
\par    MZF got some icons from the publicly available 3000icon.dll on ftp.cica.indiana.edu.  It 
doesn't have any copyright, as far as I can tell.  It has a lot of icons that are very similar (or identical) to the icons in commercial products.  If you are a maker of commercial products and I used an icon that is yours but the cica people gave away, s
orry.  Write me and I will take it out of MZF.  Please don't sue me until you have sued everyone who makes those 'x-number-of-icon DLLs' who is using your icon.
\par 
\par 
\par }{\b\f2\fs24 Area editor comparison:
\par }{\f2 The editor comparison has been moved to my web page, at }{\b\f2 http://www.goodnet.com/~esnible/mudother.html
\par }{\f2 \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} mobprogs:010}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} MOBprograms}}{\b\f2\fs28  }{\cs26\fs16\up6 K{\footnote \pard\plain \s27 \fs20 {
\cs26\fs16\up6 K} MOBprograms}}{\b\f2\fs28  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} IDD_MOBPROG}}{\b\f2\fs28  MOBprograms
\par }{\f2 
\par }{\b\f2 (MOBprogram support is still experimental in MZF.  Currently you may only view MOBprograms.  In the future we hope to let you edit and syntax check your MOBprograms.--Slash)
\par }{\f2 
\par }{\i\f2 (This text taken from the Merc 2.2 release, MOBprograms are an invention of N'atas-Ha natasha@gs118.sp.cs.cmu.edu)
\par }{\f2 
\par }{\b\f2 MOBprograms}{\f2  are a way to make your mobiles more interesting.  MOBprograms were introduced in Merc 2.2, and did
 not make it to Envy.  The source for the MOBprogram interpreter can be found on many Merc ftp sites, or as part of the Merc 2.2 release.
\par 
\par }{\strike\f2 The Basic Idea}{\v topic_mprog_basic}{\f2 
\par }{\strike\f2 MOBprogram Syntax}{\v topic_mprog_syntax}{\f2 
\par }{\strike\f2 Associating MOBprograms With A Mobile/MOBprogram Files}{\v topic_mprog_files}{\f2 
\par }{\strike\f2 Trigger Types}{\v topic_mprog_triggers}{\f2 
\par }{\strike\f2 Variables}{\v topic_mprog_variables}{\f2 
\par }{\strike\f2 Control Flow Syntax}{\v topic_mprog_control_flow}{\f2 
\par }{\strike\f2 Operators}{\v topic_mprog_operators}{\f2 
\par }{\strike\f2 If_Checks In Control Flow}{\v topic_mprog_ifchecks}{\f2 
\par }{\strike\f2 MOBcommands Of Interest (Special commands for mobiles only)}{\v topic_mprog_newcommands}{\f2 
\par }{\strike\f2 Regarding CPU Slowdown}{\v topic_mprog_cpuslow}{\f2 
\par }{\strike\f2 Miscellaneous Information}{\v topic_mprog_misc}{\f2 
\par }{\strike\f2 MOBprogram Credits}{\v topic_mprog_credits}{\f2 
\par }{\strike\f2 Quick Reference}{\v\f2 topic_mprog_quickref}{\f2 
\par }{\strike\f2 Example}{\v\f2 topic_mprog_example}{\f2 
\par }{\b\f2\fs28 \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} mobprogs:020}}{\b\f2\fs28  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} topic_mprog_basic}}{\b\f2\fs28  }{\cs26\fs16\up6 ${\footnote 
\pard\plain \s27 \fs20 {\cs26\fs16\up6 $} The Basic Idea}}{\b\f2\fs28  The Basic Idea
\par }{\f2 
\par Ever wonder why most muds either seem dead or overcrowded? The answer is probably partially due to the fact that the mobiles never do anything but wait to be slaughtered.  Unless someone has gone to great lengths and added many special procedures, most mo
biles have no idea you are in the room with them and rarely listen to what you say. The typical Midgaard mayor wanders happily along even when the populace pokes him, waves his City Key about, unlocks his gates, or frenches his secretary, etc. So a way to
 give the mobiles a bit more spirit would be neat. Enter the MOBprograms.
\par 
\par The backbone of the MOBprograms shall be called }{\strike\f2 triggers}{\v topic_mprog_triggers}{\f2 
 from this point on.  Essentially, they are procedure calls placed in sneaky places in the mud code which provide the context for what is going on around the mobile.  So, if something happens in the mobile's room and a trigger is activated, then a list of
 commands is sent to the interpreter in the mobile's name, thus making her/it/him do an appropriate something.
\par 
\par Since knowing the appropriate response for every mobile to every possible trigger is not easy, this command list shouldn't be a rigid script, but needs to be somehow unique for the mobile and the situation.  However, in order to know the situation, a mobi
le needs to know more about the trigger than that it just happened. So, we have to include some sort of }{\strike\f2 variables}{\v topic_mprog_variables}{\f2  as well to set the context appropriately.
\par 
\par As most implementors know, most area creators are not versed in coding, but
 usually have great ideas. Therefore, whatever system is used needs to be quite simple. This is not to demean creators in anyway. Simply, it is useless to have a powerful system, if the only person able to write anything is someone who finds C coding in g
eneral to be exciting and non frustrating.  If that is going to be the case, then stick to the special procedures, since there is no bound to what a complex special procedure can accomplish. Yet, from experience working on several muds, most admins and im
plementors prefer not to be writing one shot spec_procs to satisfy the needs of their creators.
\par 
\par Thus, the basic idea: let mobiles react to a myriad of mud events/situations by having them perform a list of commands which can be tailored to the moment through a simple and unintimidating scheme usable by any creator.
\par }{\b\f2\fs28 \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} mobprogs:030}}{\b\f2\fs28  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} topic_mprog_syntax}}{\b\f2\fs28  }{\cs26\fs16\up6 ${\footnote 
\pard\plain \s27 \fs20 {\cs26\fs16\up6 $} MOBprogram syntax}}{\b\f2\fs28  MOBprogram Syntax
\par }{\f2 
\par The simplest way to describe any syntax is by example, so here goes.  First, define the notation: anything contained in braces \{\}
 is required, anything in brackets [] is optional, anything in quotes "" is a case insensitive literal, NL refers to a required new-line. The meanings of the labels used will be described following the syntax diagram.
\par 
\par ">" \{}{\strike\f2 trigger_type}{\v topic_mprog_triggers}{\f2 \} " " \{argument_list\} "~" NL
\par \{program_command_1\} NL
\par \{program_command_2\} NL
\par \{program_command_3\} NL
\par      .   .   .
\par \{program_command_N\} NL
\par "~" NL
\par 
\par }{\b\f2 Explanations
\par }{\f2 
\par A TRIGGER_TYPE is one of the available }{\strike\f2 triggers}{\v topic_mprog_triggers}{\f2 .
\par A PROGRAM_COMMAND can be any legal mud command, or a }{\strike\f2 control flow}{\v topic_mprog_control_flow}{\f2  command.
\par The ARGUMENT_LIST depends upon the trigger, but it is always parsed into the
\par \tab system as a character string.
\par 
\par This is an example of ONE MOBProgram block for a mob.
\par }{\b\f2\fs28 \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} mobprogs:040}}{\b\f2\fs28  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} topic_mprog_files}}{\b\f2\fs28  }{\cs26\fs16\up6 ${\footnote 
\pard\plain \s27 \fs20 {\cs26\fs16\up6 $} MOBprogram files}}{\b\f2\fs28  Associating MOBprograms With A Mobile
\par }{\f2 
\par }{\b\i\f2 Note to MZF users:  It is not currently possible to use MZF to enter MOBprograms.  Expect this feature in the next version.  Until then, the old 'by hand' instruction are provided for adding MOBprograms.--Slash
\par }{\f2 
\par }{\b\f2 Back to ways to associate...
\par }{\f2 
The first involves a simple in-file approach.  In the mobile section of your area files, at the end of the mobile's block (i.e. on the line following the typical position/default position/sex line), append any number of MOBprograms blocks (using the }{
\strike\f2 MOBprogram syntax}{\v topic_mprog_syntax}{\f2 ) followed by a line starting with one '|' (pipe), as in the following example from Merc 2.2's midgaard.are:
\par }{\f11\fs16 #3062
\par fido dog~
\par the beastly fido~
\par Beastly Fido is here.
\par ~
\par Fido is a small dog that has a foul smell and pieces of rotted meat hanging
\par around his teeth.
\par ~
\par 161 0 -200 S
\par 0 20 10 1d6+4 1d4+0
\par 10 25
\par 8 8 1
\par >greet_prog 40~
\par bark $n
\par if name($n) == mayor
\par \tab growl $n
\par \tab kill $n
\par endif
\par ~
\par >rand_prog 10~
\par emote leaves a deposit on the ground.
\par ~
\par |
\par }{\i\f2 (The above is the way MZF perfers--Slash)}{\f2 
\par 
\par The second method is to add a #MOBPROGS section to the area files.  Logically this section should follow the #MOBILE section since otherwise the mobiles probably wont have spa
ce allocated for them. In the #MOBPROGS section, list as many lines as you desire of:
\par 
\par \tab \tab \tab "M" \{Vnum\} \{MOBprogram_filename\} NL
\par 
\par followed by a line starting with a 'S' (case insensitive)
\par 
\par }{\b\f2 Explanations
\par }{\f2 
\par The VNUM is whatever number mobile to which you are associating the MOBprogram.  The MOBPROGRAM_FILENAME is the name of the external file of MOBprograms.  It is not case Insensitive and may include directory hierarchies (foo/bar/xx)
\par 
\par NOTE:  MERC 2.2 provides for a separate directory called MOBProgs.  Any directory hierarchies branch from the Merc2/area/MOBProgs directory.
\par }{\b\i\f2 
\par Note: MZF doesn't use the MOBprogs directory, it expects to read MOBprogs from the same directory as the area file.  I hope to add an option to set the MOBprog directory in the next version.--Slash}{\f2 
\par 
\par }{\b\f2\fs28 MOBprogram Files
\par }{\f2 
\par Since it is often useful to have the same MOBprograms affecting several different mobiles, referencing MOBprograms stored in an external file is needed. As described above, if the second method is used, such a file is already being
 referenced. Using the first method, in place of a true MOBprogram block, one can place the dummy line in the #MOBILE section of the *.are file in place of the MOBProgram block(s).
\par 
\par \tab \tab ">" "in_file_prog" \{MOBprogram_filename\} "~" NL
\par 
\par Note there is no list of program_commands as well as no second tilde ~.
\par 
\par \tab In a file, the }{\strike\f2 syntax}{\v topic_mprog_syntax}{\f2  is exactly the same as it is for a in_file
\par approach:
\par 
\par \tab A list of MOBprogram (NOT including any dummy in_file_prog
\par \tab lines, sorry but recursion was outlawed for simplicity)
\par \tab blocks followed by a line starting with one '|' (pipe).
\par \tab Example provided:  Beggar.prg
\par 
\par More than one mobile can use the same file and one mobile can call more than one file.  Files referenced using the dummy in_file_prog line are placed in the MOBprogram list at the point where the dummy line exists. Files referenced using the #MOBPROG sect
ion are added to the end of the mobiles MOBprogram list. This is important because the only the first successful MOBprogram of some }{\strike\f2 trigger_types}{\v topic_mprog_triggers}{\f2  is checked.
\par }{\b\f2\fs28 \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} mobprogs:050}}{\b\f2\fs28  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} topic_mprog_triggers}}{\b\f2\fs28  }{\cs26\fs16\up6 ${\footnote 
\pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Trigger Types}}{\b\f2\fs28  Trigger Types
\par }{\f2 
\par Triggers are fairly easy to add, but this basic list should hold for most needs. Their names, argument list syntaxes, and translation into more articulate English are given below:
\par 
\par Syntax:  }{\b\f2 in_file_prog}{\f2  <ARGUMENT>
\par 
\par The argument is a single word which is the location of the stored file as referenced from the running directory (MOBProgs).
\par 
\par }{\b\f2 NOTE:}{\f2   Dummy trigger. Not valid in any file, only for use in loading files from the first method described in }{\strike\f2 Associating MOBprograms With A Mobile}{\v topic_mprog_files.
\par }{\b\i\f2 (MZF does not fully support these during saving yet.--Slash)}{\f2 
\par 
\par Syntax:  }{\b\f2 act_prog}{\f2  [p] <ARGUMENT>
\par 
\par The argument is a list of keywords separated by spaces. If the first word is the character 'p' by itself then the rest of the word list is considered to be a phrase.  The trigger is activated whenever a keyword (or the phrase) is contained in the act() me
ssage. Both the phrase and keywords are case insensitive.
\par 
\par NOTE:  Most general trigger. Applies to almost every event which happens
\par \tab in the mud. Anytime the function act() is called with a message
\par \tab to be delivered TO_CHAR,TO_VICT,TO_ROOM,etc. the act can be
\par \tab triggered.  Basically this will trigger on almost everything
\par \tab you'll ever want (and some things you wont as well) For example:
\par \tab MOBprogram: >act_prog p pokes you in the ribs.~
\par \tab This trigger will only be activated if a mobile receives a message
\par \tab in which the above five words are found in the exact order and
\par \tab spacing given. Note that the period is needed because the words
\par \tab must be found on their own. This eliminates confusion when the
\par \tab keyword is 'hi' and a message with the word 'this' is being checked.
\par 
\par Syntax:  }{\b\f2 speech_prog}{\f2  [p] <ARGUMENT>
\par 
\par \tab The argument is the same as for an act_prog.
\par 
\par NOTE:  This is only triggered when the keyword or phrase is contained in a
\par \tab message which has been said by a PC in the same room as the mob.
\par \tab The PC restriction is not necessary, but makes infinite loops
\par \tab between two talking mobiles impossible. It also makes it impossible
\par \tab for two NPC's to stand and discuss the weather however. 
\par 
\par Syntax:  }{\b\f2 rand_prog}{\f2  <NUMBER>
\par 
\par \tab The argument is a number between 1 and 100 inclusive.
\par 
\par NOTE:  This trigger is checked at each PULSE_MOBILE and if the argument is
\par \tab greater than a percentage roll the trigger is activated. This
\par \tab will happen even if there is no PC in the room with the mob,
\par \tab but there must be players in the same area. 
\par \tab It is useful to give mobiles a bit of a personality. For instance
\par \tab a janitor who stops to spit tobacco, or complain about the hours,
\par \tab or wonder why there are no woman janitors on muds, or a fido which
\par \tab barks or growls or pees on the curb is much more alive than one
\par \tab which just sits there scavenging.
\par 
\par Syntax:  }{\b\f2 fight_prog}{\f2  <NUMBER>
\par 
\par \tab The argument is a percentage like in rand_prog.
\par 
\par NOTE:  Useful for giving mobiles combat attitude.  It is checked every
\par \tab PULSE_VIOLENCE when the mobile is fighting.  Can be used to cast
\par \tab spells, curse at the opponent, or whatever. Only the first successful
\par \tab one will be processed to save time.  Also, this means that the
\par \tab mobile wont get lucky and 1. curse, cast a fireball and 2. spit on the
\par         player, cast another fireball in the same pulse.
\par 
\par Syntax:  }{\b\f2 hitprcnt_prog}{\f2  <NUMBER>
\par 
\par \tab The argument is a percentage.
\par 
\par NOTE:  Is activated at each PULSE_VIOLENCE when the mobile is fighting. It
\par \tab checks to see if the hit points of the mobile are below the given
\par \tab percentage.  Multiple hitprcnt_progs should be listed in increasing
\par \tab order of percent since a 40% will always be activated before a 20%
\par \tab and, only the first successful hitprcnt trigger is performed.
\par 
\par Syntax:  }{\b\f2 greet_prog}{\f2  <NUMBER>
\par 
\par \tab Again a percentage argument.
\par 
\par NOTE:  Whenever someone enters the room with the mobile, and the mobile saw
\par \tab the person enter, this is checked. Good for shopkeepers who want
\par \tab to welcome customers, or for pseudo-aggressive mobiles which need to
\par \tab discriminate on who they attack.
\par \tab 
\par Syntax:  }{\b\f2 all_greet_prog}{\f2  <NUMBER>
\par 
\par \tab Again a percentage argument.
\par 
\par NOTE:  Like greet_prog, but it can be triggered even if the mobile didn't
\par \tab see the\tab arrival (i.e. sneak, invis, etc.). Most useful for faking
\par \tab teleport rooms (if your mobiles can transfer) or for impassable
\par \tab guardians.
\par 
\par     **NOTE: neither greet_prog is activated if the mobile is fighting.**
\par \tab 
\par Syntax:  }{\b\f2 entry_prog}{\f2  <NUMBER>
\par 
\par \tab Again a percentage argument.
\par 
\par NOTE:  The opposite of a greet_prog. Whenever the mobile itself enters a new
\par \tab room, this can be triggered.  Useful for looking around, or waving
\par \tab or other things that real PCs do when they arrive at a crowded room.
\par \tab Only the first successful one of these is done so the mobile doesn't
\par \tab look stupid by repeating commands resulting from multiple MOBprograms.
\par 
\par Syntax:  }{\b\f2 give_prog}{\f2  <ARGUMENT>
\par 
\par \tab The argument is either the complete name of an object, or the word
\par \tab 'all'. A complete name is like: "sword shiny magic" vs. "sword". It
\par \tab is whatever is on the line of the object section following the VNUM.
\par 
\par NOTE:  This is triggered whenever something is given to the mobile.  Best used
\par \tab for quests.  Since the first successful trigger is the only one of
\par \tab this type which is processed, having an "all" argument give_prog
\par \tab at the end of the MOBprogram list is essentially a default response.
\par 
\par Syntax:  }{\b\f2 bribe_prog}{\f2  <NUMBER>
\par 
\par \tab The argument is any positive integer number.
\par 
\par NOTE:  This trigger is activated whenever money is given to the mobile. If the
\par \tab amount given exceeds the number, then process the commands. Note
\par \tab again, that an argument of '1' would act as a default response.
\par \tab If money is given to a mobile with this trigger type, instead of the
\par \tab cash being added to mob->gold, the mobile is instead given a pile of
\par \tab coins in the proper amount. In this way, the mobile can drop the coins
\par \tab or refer to the object by "amount" (short description:"%d gold coins")
\par \tab This surely has some drawbacks, but it lets the mobile do something
\par \tab with the bribe (NOTE: dropping it and getting it turns it into cash)
\par \tab This can be done sneakily if a NPC-only "at" command exists.
\par 
\par Syntax:  }{\b\f2 death_prog}{\f2  <NUMBER>
\par 
\par \tab The argument is a percent once again.
\par 
\par NOTE:  When the mobile dies, if the random percentage is less than the argument
\par \tab the mobile performs the MOBprogram commands rather than the usual
\par \tab death_cry sequence.  This is done before the corpse is made, so the
\par \tab commands can be considered the mobiles last gasp.  It could perhaps
\par \tab destroy the items it was holding, or create some, or cast a spell
\par \tab on the killer and the room, or even goto a new location and die
\par \tab there (with a text message, the corpse would seem to vanish)  The
\par \tab position of the mobile is set to STANDING, and so it can do all the
\par \tab normal commands, without worrying about being DEAD.  However, even
\par \tab if the mobile restores itself to full hit points, it will still die.
\par \tab This is not a way to immortal mobiles. However, the last thing this
\par \tab mobile does could be to goto some vacant room, load a fresh version
\par \tab of itself, drop all its items, force the new mobile to get all the
\par \tab items and wear them, send the new mobile back to the character who
\par \tab killed it and force the new mobile to attack that character. Along
\par \tab with a text message which said the mobile restored itself, this
\par \tab might be a convincing effect. (Note that your kitten could turn into
\par \tab a dragon this way too).  Of course this assumes that some NPC
\par \tab commands have been implemented. 
\par 
\par \tab Note that the first successful bribe_prog, give_prog, hitprcnt_prog, death_prog, fight_prog, rand_prog and entry_prog is the only one which is executed.  All the
 successful greet(_all)_progs, speech_progs, and act_progs will be done. This is the best arrangement we found for handling situations where you imported several MOBprogram files for a mobile.  If you are going to write lots of little files and piece them
 together to create the effect you want, it is advisable to not mix things together all that much, otherwise you have to pay close attention to the order in which the programs are added to the link list.
\par 
\par Also, no MOBprograms will be successful when the mob
ile is charmed (since it has no self violition, it should act like it has none) to protect mobiles which are given special powers from being implemented by a player.  One bug we had in early testing was a player who charmed a mobile and then used its aggr
essive greet_prog to attack other players. 
\par }{\b\f2\fs28 \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} mobprogs:060}}{\b\f2\fs28  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} topic_mprog_variables}}{\b\f2\fs28  }{\cs26\fs16\up6 ${\footnote 
\pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Variables}}{\b\f2\fs28  Variables
\par }{\f2 
\par \tab To make things come alive, variables are needed.  These are represented in the MOBprograms by using a dollar sign convention as in the socials.
  When the mud command is processed, these variables are expanded into the values shown below.  Usually, it is best to use the short descriptions of mobiles and the names of players when speaking them, but if you are performing an action to someone almost
 always you want the name. The title field for players is an extra that probably wont often be used.  Without further hesitation... the variables:
\par 
\par $i\tab the first of the names of the mobile itself.
\par $I\tab the short description of the mobile itself.
\par $n\tab the name of whomever caused the }{\strike\f2 trigger}{\v topic_mprog_triggers}{\f2  to happen.
\par $N\tab the name and title of whomever caused the trigger to happen.
\par $t\tab the name of a secondary character target (i.e. A smiles at B)
\par $T\tab the short description, or name and title of target (NPC vs. PC)
\par $r\tab the name of a random char in the room with the mobile (never == $i)
\par $R\tab the short description, or name and title of the random char
\par 
\par $j\tab he,she,it based on sex of $i.
\par $e\tab he,she,it based on sex of $n.
\par $E\tab he,she,it based on sex of $t.
\par $J\tab he,she,it based on sex of $r.
\par 
\par $k\tab him,her,it based on sex of $i.
\par $m\tab him,her,it based on sex of $n.
\par $M\tab him,her,it based on sex of $t.
\par $K\tab him,her,it based on sex of $r.
\par 
\par $l\tab his,hers,its based on sex of $i.
\par $s\tab his,hers,its based on sex of $n.
\par $S\tab his,hers,its based on sex of $t.
\par $L\tab his,hers,its based on sex of $r.
\par 
\par $o\tab the first of the names of the primary object (i.e. A drops B)
\par $O\tab the short description of the primary object
\par $p\tab the first of the names of the secondary object (i.e. A puts B in C)
\par $P\tab the short description of the secondary object
\par 
\par $a\tab a,an based on first character of $o
\par $A\tab a,an based on first character of $p
\par 
\par \tab Also, in }{\strike\f2 if_checks}{\v topic_mprog_ifchecks}{\f2 
, the accepted variables are the basic ones (i,n,t,r,o,p).  If a variable is referenced that doesn't exist, then the value is simply left blank. (i.e. referring to $o when the trigger is: A kisses B)
\par 
\par \tab The only problem with the variables is that the secondary object and the secondary target are passed by act() in the same location.  This means that if you reference 
$t in an  A puts B in C  situation, the result will probably be a happy mud crash or some weird side effect, especially if $t is used in an }{\strike\f2 if_check}{\v topic_mprog_ifchecks}{\f2 
 (i.e. if isnpc($t) in the above situation) The basic fix for this is to change everyone who calls the act() procedure to specify a secondary
\par object and a secondary character. But that is a fairly comprehensive trivial twiddle, so we left it the way it is so that, you aren't forced to make all those twiddles to use the MOBprograms.
\par }{\b\f2\fs28 \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} mobprogs:080}}{\b\f2\fs28  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} topic_mprog_control_flow}}{\b\f2\fs28  }{\cs26\fs16\up6 $
{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Control Flow Syntax}}{\b\f2\fs28  Control Flow Syntax
\par }{\f2 
\par \tab In place of any legal mud command in a MOBprogram, one can substitute a
\par flow of control command. Here is the syntax for a flow of control command.
\par 
\par "if" " " \{}{\strike\f2 if_check_1}{\v topic_mprog_ifchecks}{\f2 \} "(" \{argument\} ")" [ \{}{\strike\f2 operator}{\v topic_mprog_operators}{\f2 \} \{value\} ] NL
\par [ "or" " " \{if_check_2\} "(" \{argument\} ")" [ \{operator\} \{value\} ] NL ]
\par                         .           .           .
\par [ "or" " " \{if_check_N\} "(" \{argument\} ")" [ \{operator\} \{value\} ] NL ]
\par 
\par \tab [ \{program_command_1\} NL ]
\par \tab [ \{program_command_2\} NL ]
\par \tab       .   .   .
\par \tab [ "break" NL ]
\par \tab       .   .   .
\par \tab [ \{program_command_N\} NL ]
\par 
\par [ "else" NL ]
\par 
\par \tab [ \{program_command_1\} NL ]
\par \tab [ \{program_command_2\} NL ]
\par \tab       .   .   .
\par \tab [ "break" NL ]
\par \tab       .   .   .
\par \tab [ \{program_command_N\} NL ]
\par 
\par "endif" NL
\par 
\par \tab Basically, it is: an 'if' line, followed by zero or more 'or' lines, followed by zero or more legal mud commands, which may contain a 'break' line, possibly followed by an 'else' line , fo
llowed by zero or more legal mud commands, which may contain a 'break' line, followed by an 'endif' line.
\par 
\par The only new syntax labels are all in the IF line:
\par 
\par --Explanations
\par 
\par An }{\strike\f2 IF_CHECK}{\v topic_mprog_ifchecks}{\f2  is a string which describes under what context to compare things. The ARGUMENT is the reference point from which the LHS of an expression comes.  The }{\strike\f2 OPERATOR}{\v topic_mprog_operators}{
\f2  indicates how the LHS and RHS are going to be compared.  The VALUE is the RHS of the expression to be compared by the operator.
\par 
\par The BREAK command bails out of the entire MOBprogram regardless of the level if nesting.
\par 
\par If that looks confusing, skip to the end of the document and review the }{\strike\f2 Example}{\v\f2 topic_mprog_example}{\f2 
.  Hopefully that should clear things, otherwise you'll probably have to give us a mail since examples are the best way we know to explain syntax.
\par }{\b\f2\fs28 \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} mobprogs:090}}{\b\f2\fs28  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Operators}}{\b\f2\fs28  }{\cs26\fs16\up6 #{\footnote \pard\plain 
\s27 \fs20 {\cs26\fs16\up6 #} topic_mprog_operators}}{\b\f2\fs28  Operators
\par }{\f2 
\par \tab Most of the basic numeric operators are legal and perform the same function as in C. The string operators are a bit more confusing. There are negative versions of some of the operators. These are not strictly needed, since the if/else construct of }{
\strike\f2 Control Flow}{\v topic_mprog_control_flow}{\f2  commands can handle either case.
\par 
\par Numeric Operators: == != > < >= <= & |     String Operators: == != / !/
\par 
\par \tab For strings, }{\b\f2 ==}{\f2  and }{\b\f2 !=}{\f2  check for exact match between the two strings and the other two, }{\b\f2 /}{\f2  and }{\b\f2 !/}{\f2 
 check to see if the second string is contained in the first one.  This is so things like:  if name($n) / guard  will respond true to "cityguard" "guard" "guardian"  etc. Using }{\b\f2 ==}{\f2 
 on a name implies that you are matching the complete name "cityguard guard" or whatever. The string operators are case }{\b\f2 SENSITIVE}{\f2 .
\par }{\b\f2\fs28 \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} mobprogs:100}}{\b\f2\fs28  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} If_checks in control flow}}{\b\f2\fs28  }{\cs26\fs16\up6 #
{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} topic_mprog_ifchecks}}{\b\f2\fs28  If_Checks In Control Flow
\par }{\f2 
\par \tab The provided list of }{\b\f2 if_checks}{\f2 
 and their arguments are below.  They should all be fairly obvious in what they do, but some of the more obtuse deserve a slight explanation. Any '==' operator can be replaced with any of the available ones described under }{\strike\f2 operator}{\v 
topic_mprog_operators}{\f2 .  The argument ($*) refers to any of the }{\strike\f2 variables}{\v topic_mprog_variables}{\f2 
 which make sense for that if_check (i.e. for an if_check which is referencing a person the only valid variables would be $i, $n, $t or $r)  A value type of string is a sequence of charact
ers. It does not need to be included in quotes or anything like that (i.e. name($n)== orc large brown)
\par 
\par rand     (num)\tab \tab \tab Is random percentage less than or equal to num
\par isnpc     ($*)\tab \tab \tab Is $* an NPC
\par ispc      ($*)\tab \tab \tab Is $* a PC
\par isgood    ($*)\tab \tab \tab Does $* have a good alignment 
\par isfight   ($*)\tab \tab \tab Is $* fighting
\par isimmort  ($*)\tab \tab \tab Is the level of $* greater than max_mortal
\par ischarmed ($*)\tab \tab \tab Is $* affected by charm
\par isfollow  ($*)\tab \tab \tab Is $* a follower with their master in the room
\par isaffected($*)\tab & integer\tab Is ($*->affected_by & integer) true
\par \tab \tab \tab \tab (person only) 
\par hitprcnt  ($*)\tab == percent\tab Is the hit/max_hit of $* equal to percent
\par inroom\tab   ($*)\tab == integer\tab Is the room of $* equal to integer
\par \tab \tab \tab \tab (person only)
\par sex\tab   ($*)\tab == integer\tab Is the sex of $* equal to integer
\par position  ($*)\tab == integer\tab Is the position of $* equal to integer
\par level\tab   ($*)\tab == integer\tab Is the level of $* equal to integer
\par class\tab   ($*)\tab == integer\tab Is the class of $* equal to integer
\par goldamt\tab   ($*)\tab == integer\tab Does $* have a gold total equal to integer
\par objtype\tab   ($*)\tab == integer\tab Is the type of $* equal to integer
\par \tab \tab \tab \tab (armor,boat,etc)
\par objval#\tab   ($*)\tab == integer\tab Is $*->value[#] equal to integer (# from 0-3)
\par number\tab   ($*)\tab == integer\tab Is the vnum of $* equal to integer
\par name\tab   ($*)\tab == string\tab Is the name of $* equal to string
\par }{\b\f2\fs28 \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} mobprogs:110}}{\b\f2\fs28  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} MOBCommands of Interest}}{\b\f2\fs28  }{\cs26\fs16\up6 #{\footnote 
\pard\plain \s27 \fs20 {\cs26\fs16\up6 #} topic_mprog_newcommands}}{\b\f2\fs28  MOBCommands Of Interest
\par }{\f2 
\par These are fairly basic things, most of them are wiz commands which have been changed to allow for mobiles to perform the commands.  If you have the problem of i
mmortals abusing these powers on your mud either ditch the immortals, or add a check in all of them to only let NPC's with null descriptors do the commands.  (However, you lose a little debugging help that way).  MERC 2.2 has provided a little security fe
ature against this but it is by no means comprehensive.  Please check yourself if you are concerned.
\par 
\par Here are the basic MOBcommands that we found to be enticing:
\par 
\par Syntax:  }{\b\f2 MPSTAT}{\f2  <mobile>
\par 
\par \tab Shows the MOBprograms which are set on the mob of the given name or
\par \tab vnum and some basic stats for the mobile
\par 
\par Syntax:  }{\b\f2 MPASOUND}{\f2  <text_string>
\par 
\par \tab Prints the text string to the rooms around the mobile in the same
\par \tab manner as a death cry. This is really useful for powerful aggressives
\par \tab and is also nice for wandering minstrels or mobiles like that in
\par \tab concept.
\par 
\par Syntax:  }{\b\f2 MPJUNK}{\f2  <object>
\par 
\par \tab Destroys the object referred to in the mobiles inven. It prints no
\par \tab message to the world and you can do things like junk all.bread or
\par \tab junk all. This is nice for having janitor mobiles clean out their
\par \tab inventory if they are carrying too much (have a MOBprogram trigger on
\par \tab the 'full inventory')
\par 
\par Syntax:  }{\b\f2 MPECHO}{\f2                  <text_string>
\par \tab  }{\b\f2 MPECHOAT}{\f2       <victim> <text_string>
\par \tab  }{\b\f2 MPECHOAROUND}{\f2   <victim> <text_string>
\par 
\par \tab Prints the text message to the room of the mobile. The three options
\par \tab let you tailor the message to goto victims or to do things sneaky
\par \tab like having a merchant do: mpat guard mpechoat guard rescue_please 
\par \tab This coupled with a guard act_prog }{\strike\f2 trigger}{\v topic_mprog_triggers}{\f2  on rescue_please to
\par \tab mpgoto $n and mpecho $I has arrived.  It is an affective way of quickly
\par \tab bringing guards to the scene of an attack.
\par 
\par Syntax:  }{\b\f2 MPMLOAD}{\f2  <vnum>
\par \tab  }{\b\f2 MPOLOAD}{\f2  <vnum> <level>
\par 
\par \tab Loads the obj/mobile into the inven/room of the mobile. Even if the
\par \tab item is non-takable, the mobile will receive it in the inventory.
\par \tab This lets a mobile distribute a quest item or load a key or something.
\par 
\par Syntax:  }{\b\f2 MPKILL}{\f2  <victim>
\par 
\par \tab Lets a mobile kill a player without having to murder and be fifth
\par \tab level.  Lots of MOBprograms end up with mpkill $n commands floating
\par \tab around. It works on both mobiles and players.
\par 
\par Syntax:  }{\b\f2 MPPURGE}{\f2  [argument]
\par 
\par \tab Destroys the argument from the room of the mobile. Without an argument
\par \tab the result is the cleansing of all NPC's and items from the room with
\par \tab the exception of the mobile itself.  However, mppurge $i will indeed
\par \tab purge the mobile, but it MUST be the last command the mobile tries to
\par \tab do, otherwise the mud cant reference the acting mobile trying to do the
\par \tab commands and bad things happen.  
\par 
\par Syntax:  }{\b\f2 MPGOTO}{\f2  <dest>
\par 
\par \tab Moves the mobile to the room or mobile or object requested.  It makes
\par \tab no message of its departure or of its entrance, so these must be
\par \tab supplied with mpecho commands if they are desired.
\par 
\par Syntax:  }{\b\f2 MPAT}{\f2  <dest> <command>
\par 
\par \tab Performs the command at the designated location. Very useful for doing
\par \tab magic slight of hand tricks that leave players dumbfounded.. such as
\par \tab metamorphing mobiles, or guard summoning, or corpse vanishing.
\par 
\par Syntax:  }{\b\f2 MPTRANSFER}{\f2  <victim> [dest]
\par 
\par \tab Sends the victim to the destination or to the room of the mobile as a
\par \tab default.  if the victim is "all" then all the characters in the room
\par \tab of the mobile are transferred to the destination.  Good for starting
\par \tab quests or things like that.  There is no message given to the player
\par \tab that it has been transferred and the player doesn't do a look at the
\par \tab new room unless the mob forces them to. Immortals cannot be transferred.
\par 
\par Syntax:  }{\b\f2 MPFORCE}{\f2  <victim> <command>
\par 
\par \tab Forces the victim to do the designated command.  The victim is not told
\par \tab that they are forced, they just do the command so usually some mpecho
\par \tab message is nice.  You can force players to remove belongings and give
\par \tab them to you, etc.  The player sees the normal command messages (such as
\par \tab removing the item and giving it away in the above example)  Again, if
\par \tab the victim is "all" then everyone in the mobiles room does the command.
\par \tab This cannot be used on immortals.
\par }{\b\f2\fs28 \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} mobprogs:120}}{\b\f2\fs28  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} topic_mprog_cpuslow}}{\b\f2\fs28  }{\cs26\fs16\up6 ${\footnote 
\pard\plain \s27 \fs20 {\cs26\fs16\up6 $} MOBprog CPU slowdown}}{\b\f2\fs28  Regarding CPU Slowdown
\par }{\f2 
\par We have no real idea how slow this makes a mud. However, you will find that if you are judicious with your use of MOBprograms, you can either do little damage, or even reduce the effort on your server!  This means that mobile polling (including the rand_p
rogs) need only be checked when players are around. This reduces computation of random_stuff a little, but it is still a polling method, and subject to a basic
 inefficiency there. However, aside from the rand_progs, the only additional slowdowns will be when the mobile is responding to the situation, and you would get that from a special procedure as well (although MOBprograms are surely not as efficient as com
piled C code)
\par 
\par For those who are afraid that MOBprograms will drown their CPU, here is a brazen suggestion which could put you a bit more at ease.  Instead of having aggressive mobiles, try the following MOBprogram block on all would be aggressives.
\par 
\par }{\f11 >greet_prog 100~
\par if ispc($n)
\par   if isimmort($n)
\par     bow $n
\par   else
\par     mkill $n
\par   endif
\par endif
\par ~
\par }{\f2 
\par This has the effect of making the mobile attack the FIRST visible mortal player who walks into the room. [Merc 2.0 has a random char be the victim, so we allow our fighting mobiles a high chance to switch their target to any random player in the opposing 
group at each pulse_violence.]
\par 
\par What this has allowed us to do, is to comment out t
he aggr_update section of the code and thus reduce our computation by a bunch. There is no continuous polling through all the mobiles in occupied zones and checking to see if there is an NPC aggressor and a PC victim. We also don't have to worry about pla
yers skipping through aggressives, since the }{\strike\f2 trigger}{\v topic_mprog_triggers}{\f2  catches folk as soon as they enter the room.
\par 
\par Note that the price we paid for this, was that if a second player walked in during the combat, and the first character flees, the mobile d
idn't realize that there is a new target. So, we compromised by adding a rand_prog which had the mobile appear to peer around the room and then do an mkill $r.  AHA! you say, we are back to polling. Well true, but since mobile_update is called anyway (at 
1/16 the frequency of aggr_update in default Merc 2.0) and we only add an if check, a walk of a short link_list and the MOBprogram execution itself, we have still reduced the aggr_update stuff by major amounts.
\par 
\par Of course the act_prog updates are currently 
done in the aggr_update section but if you decrease the mobile_update time a bit, and move the act_progs over to there, the result is act_progs which have a brief delay (like a PC who has to type things over a modem does) 
\par \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} mobprogs:140}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} MOBprog Miscelleneous Information}}{\f2  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 
\fs20 {\cs26\fs16\up6 #} topic_mprog_misc}}{\f2  }{\b\f2\fs28 Miscellaneous Information
\par }{\f2 
\par There is really no limit to the number of MOBprograms a given mobile can have. However, the length of a single command block is limited by the value of MAX_STRING_LENGTH.  In my version
 it was around 4k, so that is probably about 100 lines.  The indentation spaces shown in the }{\strike\f2 example}{\v topic_mprog_example}{\f2  are NOT required, but do make it easier to read (and debug.)
\par 
\par The MOBprogram stuff runs totally without anything in the mob_commands.c file, but letting mobiles be a bit more godlike has allowed us to do what we consider to be wonderful things. The replicant and polymorphing mobiles described in }{\strike\f2 
Trigger Types}{\v topic_mprog_triggers}{\f2 
\par (under death_prog) as well as some nifty mob helping mob interactions are an example.
\par 
\par It IS possible to accidentally make mobiles which can }{\strike\f2 trigger}{\v topic_mprog_triggers}{\f2 
 in loops. As mentioned in the example at the end of this document, the result is usually a mud crash or major CPU dent.  We don't know any way to prevent this from happening, other than careful coding and a restriction of mobile travel from zones of one 
creator to another (another good reason to not have charmed mobiles do anything).  Tracking down the culprit mobile is not always easy.  The only thin
g we have found which always works, is to add a log statement into the MOBprogram driver and fill some disk space until it becomes apparent what commands are repetitively issued. Also, most infinite loops are flukes where the situation just happens to be 
right and usually it never happens again.
\par 
\par The list of }{\strike\f2 variables}{\v topic_mprog_variables}{\f2  and }{\strike\f2 triggers}{\v topic_mprog_triggers}{\f2  and }{\strike\f2 if_checks}{\v topic_mprog_ifchecks}{\f2 
 will grow continuously as our creators demand the ability to do certain things.  If you have a request o
r if you have a new one, we don't mind hearing about them, and if you find bugs, we shall gladly attempt to squash them for you. As additions or fixes are made, the code will occasionally be redistributed.  However, if you want a current version, please f
eel free to ask. When the code is redistributed, a file containing the change history from the original release will be provided (when possible) to allow you to patch in the changes with low grief.
\par 
\par The code has been written for a Merc 2.X release mud. We w
ere considering trying to port it back to 1.0, but this really had no gain for us.  Also, much of the internal mud structure has changed and makes this almost a hopeless task.  We will be glad to lend advice to someone who is trying to install this for 1.
0 and if something develops we will be glad to make that public as well.
\par \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} mobprogs:150}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} MOBprogram Credits}}{\f2  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {
\cs26\fs16\up6 #} topic_mprog_credits}}{\f2  }{\b\f2\fs28 MOBprogram Credits
\par }{\f2 
\par The reason this code was written was to enhance the playing experience at ThePrincedom (a Merc 2.0 based world scheduled to open in October 1993)
\par 
\par The original idea for this type of MOBprogram came from playing on:  WORLDS of CARNAGE, a dikumud implemented by Robbie Roberts and Aaron Buhr.  Aaron (known as Dimwit Flathead the First) was the original author from what I have been told, and I hope he w
ill not be totally offended and angered by my coding and sharing a mimicked version with the world. This version is probably not as good as the original and I do feel remorse for publishing the idea. However, 
since Carnage has been down for months without a word of information regarding its return, I am glad to let one of the best features live on in future generations of MUDs.
\par 
\par There are no objections to this code being shared, since, aside from a nuclear destruction of all the Temples of Midgaard (excepting the original one!!), bland mobiles are the greatest bane of Dikumuds today. It would be nice to get a message saying you a
re using the code just for our references.  We shan't answer questions from anyone u
ntil told where they are using the code. *grin*  Since this code is not copyrighted, you of course don't have to do anything we say, but it would be nice of you to put the mobprog help screen into your database. and have mobinfo show up somewhere on a mor
e visible help screen (possibly tagged onto the bottom of credits as a see also...)
\par 
\par I acknowledge all the work done by the original }{\strike\f2 Diku}{\v\f2 CM_HELPCREDITS}{\f2  authors as well as those at }{\strike\f2 Merc Industries}{\v\f2 CM_HELPMERC}{\f2  and appreciate their willingness to share code.  A
lso, quick thanks to Wraith for doing a little beta-installation testing.
\par 
\par N'Atas-Ha                                                       June, 1993
\par natasha@gs118.sp.cs.cmu.edu
\par 
\par (In addition to this DOC file credit section, I'd like to add a thank you to Yaz, Mahatma, Zelda, and the rest of the 4th Realm crew for extensively testing MOBProgram 2.1 for me.
\par 
\par Kahn\tab \tab \tab \tab \tab \tab \tab \tab Oct 28th, 1993
\par MERC Industries)
\par \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} mobprogs:160}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} MOBprog Quick Reference}}{\f2  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {
\cs26\fs16\up6 #} topic_mprog_quickref}}{\f2  }{\b\f2\fs28 MOBprog quick REFERENCE SHEET
\par }{\f2 
\par }{\f11\fs16 trigger         argument and what must happen to activate trigger
\par -----------------------------------------------------------------------------
\par act_prog        WORDLIST or P WORD_PHRASE to match from act() to mobile
\par bribe_prog      INTEGER amount of minimum gold amount given to mobile
\par entry_prog      PERCENT chance to check when mobile moves to a new room
\par give_prog       FULL OBJECT NAME or ALL to match when obj given to mobile
\par greet_prog      PERCENT chance to check if visible char enters mobile's room
\par all_greet_prog  PERCENT chance to check when any char enters mobile's room
\par fight_prog      PERCENT chance to check at fight_pulse if mobile is fighting
\par hitprcnt_prog   PERCENT lower than mobiles hit/max_hit if mobile is fighting
\par death_prog      PERCENT chance to check after mobile has been slain
\par rand_prog       PERCENT chance to check whenever a PC is in the mobiles zone
\par speech_prog     WORDLIST or P WORD_PHRASE to match in dialogue to mobile
\par 
\par variable         mobile actor victim random     object 2nd_object
\par -----------------------------------------------------------------------------
\par   name             $i    $n     $t     $r         $o       $p      
\par shrt_desc/title    $I    $N     $T     $R         $O       $P          
\par he/she/it          $j    $e     $E     $J         --       --    '$'symbol=$$
\par him/her/it         $l    $m     $M     $L         --       --          
\par his/hers/its       $k    $s     $S     $K         --       --
\par a/an               --    --     --     --         $a       $A
\par  
\par ifcheck       argument?        meaning
\par -----------------------------------------------------------------------------
\par rand(num)                   Is a random percentage less than or equal to num
\par isnpc($*)                   Is $* an NPC
\par ispc($*)                    Is $* a PC
\par isgood($*)                  Does $* have a good alignment 
\par isfight($*)                 Is $* fighting
\par isimmort($*)                Is the level of $* greater than max_mortal
\par ischarmed($*)               Is $* affected by charm
\par isfollow($*)                Is $* a follower with their master in the room
\par isaffected($*) & integer    Is ($*->affected_by & integer) true (person only) 
\par hitprcnt($*)  == percent    Is the hit/max_hit of $* equal to percent
\par inroom($*)    == integer    Is the room of $* equal to integer (person only)
\par sex($*)       == integer    Is the sex of $* equal to integer
\par position($*)  == integer    Is the position of $* equal to integer
\par level($*)     == integer    Is the level of $* equal to integer
\par class($*)     == integer    Is the class of $* equal to integer
\par goldamt($*)   == integer    Does $* have a gold total equal to integer
\par objtype($*)   == integer    Is the type of $* equal to integer (armor,boat,etc)
\par objval#($*)   == integer    Is $*->value[#] equal to integer (# from 0-3)
\par number($*)    == integer    Is the vnum of $* equal to integer
\par name($*)      == string     Is the name of $* equal to string
\par 
\par MOBcommand\tab argument_list\tab \tab MOBcommand\tab argument_list
\par -----------------------------------------------------------------------------
\par MPSTAT\tab \tab <mobile>\tab \tab MPASOUND\tab <text_string>
\par MPJUNK\tab \tab <object>\tab \tab MPECHO\tab \tab <text_string>
\par MPMLOAD\tab \tab <mobile>\tab \tab MPECHOAT\tab <victim> <text_string>
\par MPOLOAD\tab \tab <object> <level>\tab MPECHOAROUND\tab <victim> <text_string>
\par MPKILL\tab \tab <victim>\tab \tab MPPURGE\tab \tab [argument]
\par MPGOTO\tab \tab <dest>\tab \tab \tab MPAT\tab \tab <dest> <command> 
\par MPTRANSFER\tab <dest> [location]\tab MPFORCE\tab \tab <victim> <command>
\par }{\f2 \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} mobprogs:170}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} MOBprog EXAMPLE}}{\f2  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {
\cs26\fs16\up6 #} topic_mprog_example}}{\f2  }{\b\f2\fs28 MOBprog example
\par }{\f2 
\par }{\f11 >act_prog p pokes you in the~
\par if isnpc($n)
\par    chuckle
\par    poke $n
\par else
\par    if level($n) <= 5
\par    or isgood($n)
\par       tell $n I would rather you didn't poke me.
\par    else
\par       if level($n)>15
\par          scream
\par          say Ya know $n. I hate being poked!!!
\par          kill $n
\par          break
\par       endif
\par       slap $n
\par       shout MOMMY!!! $N is poking me.
\par    endif
\par endif
\par ~
\par }{\f2 
\par Ok.. time to translate.. the }{\strike\f2 trigger}{\v topic_mprog_triggers}{\f2 
 will only happen when the mobile gets the message "... pokes you in the ..." If the offender (recall the $n and $N refer to the char who did the poking...) is an NPC, then the mobile merely chuckles 
and pokes back. If the offender was a PC then good and low level characters get a warning, high level chars get attacked, and mid level chars get slapped and whined at.
\par 
\par Note that two of these mobiles could easily get into an infinite poke war which slows down (or frequently crashes) the mud just a bit :(Be very careful about things like that if you can. (i.e. don't respond  to a poke with a poke, and try not to let heavi
ly programmed robot mobiles wander around together.)
\par 
\par Also, it is clear that the 'order' command could get confused with the 'or' }{\strike\f2 control flow}{\v topic_mprog_control_flow}{\f2 
. However, this is only the case when 'order' is abbreviated to its two letter form, and placed immediately following an 'if' line. Thus, if you want to be that malicious in trying to break the MOBprogram code, no one is going to stand in your way (Howeve
r, the result of this would be a bug message and a bail out from the }{\strike\f2 if_check}{\v topic_mprog_ifchecks}{\f2  so things don't really break.)
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} mzf_new}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} New features of this version of MZF}}{\f2  }{\b\f2\fs28 New features in this version of MZF

\par }{\f2 
\par }{\f2\uldb ROM 2.4 mode}{\v\f2 mzf_rom}{\f2 
\par }{\f2\uldb Improved customization features}{\v IDD_OBJTYPEDIA}
\par {\uldb Slot Flags Dialog}{\v IDD_FLAGDIA}{\f2 
\par 
\par MZF has web pages at http://www.goodnet.com/~esnible/mzf.html
\par Slash\rquote s email address is esnible@goodnet.com
\par 
\par There you will find the latest information on MZF and other MUD information.\page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} rom:10}}{\f2  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} mzf_rom}}{\f2  }{
\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} ROM 2.4 mode}}{\f2  }{\cs26\fs16\up6 K{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 K} ROM}}{\f2  }{\b\f2\fs28 ROM 2.4 mode
\par }{\f2 
\par }{\f2\uldb ROM}{\v\f2 CM_HELPROM}{\f2  2.4 mode provides the ability to read and write ROM 2.4 zones (remember to set the file format), and provides new dialogs for editing ROM-specific attributes.
\par 
\par The new dialogs are:
\par }{\f2\uldb ROM Room Properties}{\v\f2 IDD_ROMROOM}{\f2 
\par }{\f2\uldb ROM Object Properties}{\v\f2 IDD_ROMOBJ}{\f2 
\par }{\f2\uldb ROM Mobile Properties}{\v\f2 IDD_ROMMOBPROP}{\f2 
\par }{\f2\uldb ROM Mobile Parts}{\v\f2 IDD_ROMMOBPARTS}{\f2 
\par }{\f2\uldb ROM Mobile Bits}{\v\f2 IDD_ROMMOBBITS}{\f2 
\par 
\par In addition, some new fields have been added to existing dialogs, for such things as the fifth slot value.
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} IDD_OBJTYPEDIA}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Object Customization Features}}{\f2  }{\cs26\fs16\up6 K{\footnote \pard\plain \s27 
\fs20 {\cs26\fs16\up6 K} customization, MZF}}{\f2  }{\b\f2\fs28 Object Customization Features}{\f2 
\par 
\par The Define Object Type dialog has four parts
\par 
\par }{\b\f2\fs24 Design Value Layout}{\b\f2 
\par }{\f2 In this box, a user-readable name is entered for each slot value for this object type.  There are five slots, reflecting ROM, the fifth slot is not used by Merc or Envy.
\par 
\par Prompt Text
\par Enter the text by which this slot is known to builders.
\par 
\par Prompt Type
\par There are three types.  F means that this slot holds a set of flags.  L means that this slot holds items selected from a list (such as the list of all spells, or the list of liquids known to ther server.)  W means that a \lquote word\rquote  o
ccupies this slot, which means that this slot is free text to the builder.
\par 
\par }{\b\f2\fs24 Test}{\b\f2 
\par }{\f2 This part of the box is not yet complete.  In the future, it will allow builders who customize MZF to see the effect of their changes before saving them.
\par 
\par }{\b\f2\fs24 Format Conv}{\b\f2 
\par }{\f2 The numeric type is the number that this object type should have when translated into Merc.  Normally, if you are using a ROM mud and have things like portals which Merc doesn\rquote 
t have server support for, when you translate your zone for running on Merc all the portals change to type \lquote furniture\rquote 
.  If you had a Merc you were writing for which had portal support, say as type #27, you could set MZF up to translate this more intelligently.
\par 
\par }{\b\f2\fs24 Custom Icon}{\b\f2 
\par }{\f2 Currently not implemented.  In the future, we hope that MZF customizers will be able to supply icon files for the new types their server supports when they distribute MZF to their players.
\par \page }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} rom:20}}{\f2  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} IDD_ROMROOM}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $}
 ROM room properties}}{\f2  }{\b\f2\fs28 ROM Room Properties
\par }{\f2 
\par }{\b\f2\fs24 Flags
\par }{\f2 The flags are ROM-specific flags I couldn\rquote t squeeze onto the the main object dialog.
\par }{\i\f2 Note:  You may not see all the flags on the main object dialog.  This is because the main object dialog is still expecting the old MZF custom room flag entries in WIN.INI.  I hope to fix this soon.
\par }{\f2 
\par }{\b\f2 Law}{\f2 \tab This is a lawful room
\par }{\b\f2 No \lquote WHERE\rquote }{\f2 \tab The \lquote WHERE\rquote  command doesn\rquote t work on mobiles in this room.  Good for secret rooms, and \lquote special\rquote  rooms like pet shops.
\par 
\par }{\b\f2\fs24 Regeneration
\par }{\f2 You can cause players to heal and regain mana either more quickly than normal or less quickly than normal.  \lquote Normal\rquote  is 100, which means 100% of the basic regen rate for the server.
\par 
\par }{\b\f2\fs24 Advanced
\par }{\b\f2 OLC Owner}{\f2 
\par Normally, you would not mess with this.  This is for OLC (On Line Coding) editing, if the server supports on-line building.
\par 
\par }{\b\f2 Clan}{\f2 
\par For clan halls.
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} IDD_ROMOBJ}}{\f2  }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} rom:30}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $}
 ROM object properties}}{\f2  }{\b\f2\fs28 ROM Object Properties
\par }{\f2 
\par }{\b\f2\fs24 Condition
\par }{\f2 Enter how badly damaged the object is here.
\par 
\par }{\b\f2\fs24 Material
\par }{\f2 Enter the kind of material which makes up the object.  Different materials may be necessary for certain spells or provide better protection against attacks.
\par 
\par }{\b\f2\fs24 Level
\par }{\f2 The minimum player level that will be allowed to use this object.
\par 
\par }{\b\f2\fs24 ROM Object Bits
\par }{\f2 Rot Death\tab Item will disintegrate soon after the mobile carrying it dies.
\par Vis Death\tab Item is undetectable until the mobile carrying it dies.
\par Melt Drop\tab Item will dissolve into smoke when dropped.
\par Sell Extract\tab ???
\par Non-Metal\tab Item always saves vs HEAT METAL
\par No Locate\tab \lquote LOCATE OBJECT\rquote  spell will not find
\par Burn Proof\tab Item is invulnerable to acid or fire.
\par No Uncurse\tab The item will always save vs REMOVE CURSE
\par 
\par }{\b\f2\fs24 Enchantments
\par }{\f2 Affects\tab Object will give wearer a magical spell affect, either positive or detrimental.
\par Immunities\tab Object gives wearer total immunity to certain kinds of attacks.
\par Resistances\tab Objects gives wearer resistances.
\par Vulnerabilities\tab Object makes wearer more vulnerable to certain kinds of attacks.
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} IDD_ROMMOBPARTS}}{\f2  }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} rom:40}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $}
 ROM mobile parts/form}}{\f2  }{\b\f2\fs28 ROM Mobile Parts/Form
\par }{\f2 
\par }{\b\f2\fs24 Body Form
\par }{\f2 These bits give the server some information on the physical properties of the body, should it become a corpse.
\par 
\par }{\b\f2\fs24 Actual Form
\par }{\f2 More information on the form of the mobile\rquote s body.
\par 
\par }{\b\f2\fs24 Parts
\par }{\f2 This is information on what kinds of parts make up this body.  There is a subsection, combat, which gives parts which give the mobile special attacks.
\par 
\par }{\b\f2\fs24 Actual Form part II
\par }{\f2 These bits tell the server what sort of creature we have.
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} IDD_ROMMOBBITS}}{\f2  }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} rom:50}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $}
 ROM mobile bits}}{\f2  }{\b\f2\fs28 ROM Mobile Bits
\par }{\f2 
\par There are three kinds of bits set here.
\par 
\par }{\b\f2 Imm}{\f2 , or }{\b\f2 Immunity}{\f2  bits, give the mobile total immunity to certain kinds of attacks.
\par }{\b\f2 Res}{\f2 , or }{\b\f2 Resistence}{\f2  bits, give the mobile better than usual resistence to certain kinds of attacks.
\par }{\b\f2 Vuln}{\f2 , or }{\b\f2 Vulnerability}{\f2  bits, make the mobile more vulnerable to certain kinds of attacks.
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} IDD_ROMMOBPROP}}{\f2  }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} rom:60}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $}
 ROM mobile properties}}{\f2  }{\b\f2\fs28 ROM Mobile Properties
\par }{\f2 
\par }{\b\f2\fs24 Hitroll
\par }{\f2 The mobile needs to roll this on a 20 sided dice to hit armor class 0.  (If you don\rquote t know what that means, don\rquote 
t worry.  Just look at other zones to get a feel for what kind of numbers go here.  The lower the number the better fighter the mobile.)
\par 
\par }{\b\f2\fs24 Hit Dice
\par }{\f2 This is used to calculate how many hit points the mobile has.  The mobile starts it\rquote 
s dungeon career with xDn+y hit points.  If x*n is large, the mobile will have a lot of variety in their strengths.  If y is large, the mobiles of this vnum will have very similar strengths.
\par 
\par }{\b\f2\fs24 Damage Dice
\par }{\f2 This is how hard the mobile hits when it attacks.
\par 
\par }{\b\f2\fs24 Type
\par }{\f2 This is the kind of attack the mobile does with its hands/mouth/tentacles/whatever.  You need to pick an attack which makes sense for the mobile, for example a bird might have a pecking attack.
\par 
\par }{\b\f2\fs24 Mana Dice
\par }{\f2 This is how much mana the mobile starts out with.
\par 
\par Armor class
\par There are four numbers here.  They are
\par AC vs Pierce
\par AC vs Bash
\par AC vs Slash
\par AC vs everything else
\par 
\par The ROM builder\rquote s guide suggests that the first three ACs be close, and the last one be considerably weaker.
\par 
\par }{\i\f2 The builders guide also features a table on what the values should be for AC and the various other values here based on level.  Until I incorporate the suggestions into MZF you will need to look up things in your ROM builder\rquote s guide.
\par }{\f2 
\par }{\b\f2\fs24 Position
\par }{\f2 Most mobiles stand up.  If you need to make sleeping mobiles, go right ahead.
\par 
\par }{\b\f2\fs24 Size
\par }{\f2 The sizes are:
\par tiny\tab small birds any anything smaller
\par small\tab large birds to halflings
\par medium\tab Elves, dwarves, humans
\par hugh\tab Giants, small dragons, wyverns
\par giant\tab Dragons, titans, etc.
\par 
\par }{\b\f2\fs24 Material
\par }{\f2 Should be left blank for flesh-and-blood creatures and spirits.  Golums and robots should have their material specified.
\par 
\par }{\b\f2\fs24 Gold
\par }{\f2 How much treasure the mobile has
\par 
\par }{\b\f2\fs24 Mobile group
\par }{\f2 
If you put a number here, then this mobile will assist in combat other mobiles with this number.  This lets you do things like have cityguards with different vnums all act in combat like they have the same vnum.  The convention, is to create this numbers 
using the same vnum that begins your zone and work from there.  So if your zone is 9900-9999, then your groups would be 9900, 9901, etc.
\par }{\i\f2 Currently, mobile group is not supported in MZF\rquote s renumbering command, so if you renumber your zone and are using mobile groups you will need to edit this by hand.}{\f2 
\par 
\par }{\b\f2\fs24 Assist
\par }{\f2 These bits determine if the mobile will assist other creatures in combat, and who.
\par 
\par }{\b\f2\fs24 Act
\par }{\f2 These bits determine how the mobile will act.
\par 
\par }{\b\f2\fs24 Off
\par }{\f2 These bits determine how the mobile will act offensively, in combat.
\par \page }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} CM_HELPROM}}{\f2  }{\cs26\fs16\up6 +{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 +} rom:70}}{\f2  }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $}
 ROM credits}}{\f2  }{\b\f2\fs28 ROM Credits
\par }{\f2 
\par ROM 2.4 is copyright 1993-1996 Russ Taylor (rtaylor@pacinfo.com)
\par 
\par }{\i\f2 Much ROM material has been incorporated into MZF, but all problems caused by said ROM material are the fault of myself, not Russ Taylor--Slash
\par }{\f2 \page }{\cs26\fs16\up6 ${\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 $} Slot Flags Dialog}}{\f2  }{\cs26\fs16\up6 #{\footnote \pard\plain \s27 \fs20 {\cs26\fs16\up6 #} IDD_FLAGDIA}}{\f2  }{\b\f2\fs28 Slot Flags Dialog
\par }{\f2 
\par The Slot Flags dialog allows you to set object values which are bit fields in a more simple way.  For Merc and Envy, this feature makes it easier to enter containers.  For ROM, this feature is very important.
\par 
\par In the }{\b\f2 List Box}{\f2 , you can select the bits you want your object to have.
\par 
\par }{\b\f2\fs24 Advanced
\par }{\f2 The Advanced box allows you to define new flags, if you are using a server with custom object flags.
\par 
\par }{\b\f2 Flag
\par }{\f2 Enter the flag value you are trying to define.  For Merc/Envy, this will be a number.  For ROM, this will be a letter.  Capitalization is important for ROM.
\par 
\par }{\b\f2 Meaning
\par }{\f2 Enter a text string.  This will be how you will select the flag on the list box above.
\par 
\par }{\b\f2 Define Flag
\par }{\f2 Click to add this flag to your MZF.INI file.
\par 
\par }{\b\f2 Purge Flag
\par }{\f2 Click to remove this flag from your MZF.INI file.
\par }}